Terminals unused in grammar

    TOK_MOD
    TOK_ACCOLG
    TOK_ACCOLD
    TOK_PIPE


Grammar

    0 $accept: script $end

    1 script: TOK_FINI code TOK_FINF

    2 code: %empty
    3     | code instruction
    4     | code error

    5 instruction: declaration
    6            | affectation
    7            | lecture
    8            | ecriture
    9            | operationBinaire
   10            | boucleSi
   11            | boucleSiSinon
   12            | boucleSwitch
   13            | bouclePour
   14            | boucleTantQue

   15 type: TOK_TYPE

   16 declaration: type identificateur TOK_FINSTR

   17 affectation: identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | identificateur TOK_AFFECT constantChaine TOK_FINSTR

   20 lecture: TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR

   21 ecriture: TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR

   22 operationBinaire: variable TOK_DECAL expressionArithmetique TOK_FINSTR

   23 variable: identificateur
   24         | constant

   25 identificateur: TOK_VAR

   26 constant: constantArithmetique
   27         | constantChaine
   28         | constantTableau

   29 constantArithmetique: TOK_NOMBRE

   30 constantChaine: TOK_STR

   31 constantTableau: TOK_BRACKG elements TOK_BRACKD

   32 elements: elements TOK_VIRG element
   33         | element

   34 element: variable

   35 expression: expressionArithmetique
   36           | expressionBooleenne
   37           | constantChaine
   38           | TOK_PARG constantChaine TOK_PARD
   39           | constantTableau
   40           | TOK_PARG constantTableau TOK_PARD

   41 expressionArithmetique: identificateur
   42                       | constantArithmetique
   43                       | addition
   44                       | soustraction
   45                       | inversionSigne
   46                       | multiplication
   47                       | division
   48                       | puissance
   49                       | TOK_PARG expressionArithmetique TOK_PARD

   50 addition: expressionArithmetique TOK_PLUS expressionArithmetique

   51 soustraction: expressionArithmetique TOK_MOINS expressionArithmetique

   52 inversionSigne: TOK_MOINS expressionArithmetique

   53 multiplication: expressionArithmetique TOK_MUL expressionArithmetique

   54 division: expressionArithmetique TOK_DIV expressionArithmetique

   55 puissance: expressionArithmetique TOK_PUISS expressionArithmetique

   56 expressionBooleenne: TOK_CSTB
   57                    | TOK_VARB
   58                    | TOK_NON expressionBooleenne
   59                    | expressionBooleenne TOK_ET expressionBooleenne
   60                    | expressionBooleenne TOK_OU expressionBooleenne
   61                    | TOK_PARG expressionBooleenne TOK_PARD
   62                    | comparaison

   63 boucleSi: TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI

   64 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI

   65 boucleSwitch: TOK_SWITCH expression cases defaultcase TOK_FINSWITCH

   66 cases: case
   67      | case cases

   68 case: TOK_CASE constant TOK_CASEDEF code

   69 defaultcase: TOK_DEFAULT TOK_CASEDEF code

   70 bouclePour: TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

   72 boucleTantQue: TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

   73 comparaison: expressionBooleenne TOK_EQ expressionBooleenne
   74            | expressionBooleenne TOK_NQ expressionBooleenne
   75            | expressionBooleenne TOK_LT expressionBooleenne
   76            | expressionBooleenne TOK_GT expressionBooleenne
   77            | expressionBooleenne TOK_LE expressionBooleenne
   78            | expressionBooleenne TOK_GE expressionBooleenne


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    TOK_DECAL (258) 22
    TOK_MOD (259)
    TOK_PLUS (260) 50
    TOK_MOINS (261) 51 52
    TOK_MUL (262) 53
    TOK_DIV (263) 54
    TOK_PUISS (264) 55
    TOK_OU (265) 60
    TOK_ET (266) 59
    TOK_NON (267) 58
    TOK_EQ (268) 73
    TOK_NQ (269) 74
    TOK_LT (270) 75
    TOK_GT (271) 76
    TOK_LE (272) 77
    TOK_GE (273) 78
    TOK_PARG (274) 20 21 38 40 49 61
    TOK_PARD (275) 20 21 38 40 49 61
    NEG (276)
    TOK_NOMBRE <texte> (277) 29
    TOK_STR <texte> (278) 30
    TOK_VAR <texte> (279) 25
    TOK_CSTB <texte> (280) 56
    TOK_VARB <texte> (281) 57
    TOK_TYPE <texte> (282) 15
    TOK_AFFECT (283) 17 18 19
    TOK_OUVR (284) 71
    TOK_FERM (285) 71
    TOK_BRACKG (286) 31
    TOK_BRACKD (287) 31
    TOK_ACCOLG (288)
    TOK_ACCOLD (289)
    TOK_VIRG (290) 32
    TOK_DPTS (291) 71
    TOK_PIPE (292)
    TOK_FINSTR (293) 16 17 18 19 20 21 22
    TOK_FINI (294) 1
    TOK_FINF (295) 1
    TOK_SI (296) 63 64
    TOK_ALORS (297) 63 64
    TOK_SINON (298) 64
    TOK_FINSI (299) 63 64
    TOK_SWITCH (300) 65
    TOK_CASE (301) 68
    TOK_DEFAULT (302) 69
    TOK_CASEDEF (303) 68 69
    TOK_FINSWITCH (304) 65
    TOK_FOR (305) 70 71
    TOK_DANS (306) 70 71
    TOK_FAIRE (307) 70 71 72
    TOK_FINFOR (308) 70 71
    TOK_TANT (309) 72
    TOK_FINT (310) 72
    TOK_LEER (311) 20
    TOK_ESCRIR (312) 21


Nonterminals, with rules where they appear

    $accept (58)
        on left: 0
    script <texte> (59)
        on left: 1
        on right: 0
    code <texte> (60)
        on left: 2 3 4
        on right: 1 3 4 63 64 68 69 70 71 72
    instruction <texte> (61)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3
    type <texte> (62)
        on left: 15
        on right: 16
    declaration <texte> (63)
        on left: 16
        on right: 5
    affectation <texte> (64)
        on left: 17 18 19
        on right: 6
    lecture <texte> (65)
        on left: 20
        on right: 7
    ecriture <texte> (66)
        on left: 21
        on right: 8
    operationBinaire <texte> (67)
        on left: 22
        on right: 9
    variable <texte> (68)
        on left: 23 24
        on right: 21 22 34 70 71
    identificateur <texte> (69)
        on left: 25
        on right: 16 17 18 19 20 23 41 70 71
    constant <texte> (70)
        on left: 26 27 28
        on right: 24 68
    constantArithmetique <texte> (71)
        on left: 29
        on right: 26 42
    constantChaine <texte> (72)
        on left: 30
        on right: 19 27 37 38
    constantTableau <texte> (73)
        on left: 31
        on right: 28 39 40
    elements <texte> (74)
        on left: 32 33
        on right: 31 32
    element <texte> (75)
        on left: 34
        on right: 32 33
    expression <texte> (76)
        on left: 35 36 37 38 39 40
        on right: 65
    expressionArithmetique <texte> (77)
        on left: 41 42 43 44 45 46 47 48 49
        on right: 17 22 35 49 50 51 52 53 54 55
    addition <texte> (78)
        on left: 50
        on right: 43
    soustraction <texte> (79)
        on left: 51
        on right: 44
    inversionSigne <texte> (80)
        on left: 52
        on right: 45
    multiplication <texte> (81)
        on left: 53
        on right: 46
    division <texte> (82)
        on left: 54
        on right: 47
    puissance <texte> (83)
        on left: 55
        on right: 48
    expressionBooleenne <texte> (84)
        on left: 56 57 58 59 60 61 62
        on right: 18 36 58 59 60 61 63 64 72 73 74 75 76 77 78
    boucleSi <texte> (85)
        on left: 63
        on right: 10
    boucleSiSinon <texte> (86)
        on left: 64
        on right: 11
    boucleSwitch <texte> (87)
        on left: 65
        on right: 12
    cases <texte> (88)
        on left: 66 67
        on right: 65 67
    case <texte> (89)
        on left: 68
        on right: 66 67
    defaultcase <texte> (90)
        on left: 69
        on right: 65
    bouclePour <texte> (91)
        on left: 70 71
        on right: 13
    boucleTantQue <texte> (92)
        on left: 72
        on right: 14
    comparaison <texte> (93)
        on left: 73 74 75 76 77 78
        on right: 62


State 0

    0 $accept: . script $end
    1 script: . TOK_FINI code TOK_FINF

    TOK_FINI  shift, and go to state 1

    script  go to state 2


State 1

    1 script: TOK_FINI . code TOK_FINF
    2 code: . %empty
    3     | . code instruction
    4     | . code error

    $default  reduce using rule 2 (code)

    code  go to state 3


State 2

    0 $accept: script . $end

    $end  shift, and go to state 4


State 3

    1 script: TOK_FINI code . TOK_FINF
    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_FINF    shift, and go to state 11
    TOK_SI      shift, and go to state 12
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 4

    0 $accept: script $end .

    $default  accept


State 5

    4 code: code error .

    $default  reduce using rule 4 (code)


State 6

   29 constantArithmetique: TOK_NOMBRE .

    $default  reduce using rule 29 (constantArithmetique)


State 7

   30 constantChaine: TOK_STR .

    $default  reduce using rule 30 (constantChaine)


State 8

   25 identificateur: TOK_VAR .

    $default  reduce using rule 25 (identificateur)


State 9

   15 type: TOK_TYPE .

    $default  reduce using rule 15 (type)


State 10

   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   31                | TOK_BRACKG . elements TOK_BRACKD
   32 elements: . elements TOK_VIRG element
   33         | . element
   34 element: . variable

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_BRACKG  shift, and go to state 10

    variable              go to state 36
    identificateur        go to state 37
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    elements              go to state 38
    element               go to state 39


State 11

    1 script: TOK_FINI code TOK_FINF .

    $default  reduce using rule 1 (script)


State 12

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   63 boucleSi: TOK_SI . expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: TOK_SI . expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 44
    comparaison          go to state 45


State 13

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   35 expression: . expressionArithmetique
   36           | . expressionBooleenne
   37           | . constantChaine
   38           | . TOK_PARG constantChaine TOK_PARD
   39           | . constantTableau
   40           | . TOK_PARG constantTableau TOK_PARD
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   65 boucleSwitch: TOK_SWITCH . expression cases defaultcase TOK_FINSWITCH
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 46
    TOK_NON     shift, and go to state 40
    TOK_PARG    shift, and go to state 47
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_CSTB    shift, and go to state 42
    TOK_VARB    shift, and go to state 43
    TOK_BRACKG  shift, and go to state 10

    identificateur          go to state 48
    constantArithmetique    go to state 49
    constantChaine          go to state 50
    constantTableau         go to state 51
    expression              go to state 52
    expressionArithmetique  go to state 53
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59
    expressionBooleenne     go to state 60
    comparaison             go to state 45


State 14

   25 identificateur: . TOK_VAR
   70 bouclePour: TOK_FOR . identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | TOK_FOR . identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_VAR  shift, and go to state 8

    identificateur  go to state 61


State 15

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   72 boucleTantQue: TOK_TANT . expressionBooleenne TOK_FAIRE code TOK_FINT
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 62
    comparaison          go to state 45


State 16

   20 lecture: TOK_LEER . TOK_PARG identificateur TOK_PARD TOK_FINSTR

    TOK_PARG  shift, and go to state 63


State 17

   21 ecriture: TOK_ESCRIR . TOK_PARG variable TOK_PARD TOK_FINSTR

    TOK_PARG  shift, and go to state 64


State 18

    3 code: code instruction .

    $default  reduce using rule 3 (code)


State 19

   16 declaration: type . identificateur TOK_FINSTR
   25 identificateur: . TOK_VAR

    TOK_VAR  shift, and go to state 8

    identificateur  go to state 65


State 20

    5 instruction: declaration .

    $default  reduce using rule 5 (instruction)


State 21

    6 instruction: affectation .

    $default  reduce using rule 6 (instruction)


State 22

    7 instruction: lecture .

    $default  reduce using rule 7 (instruction)


State 23

    8 instruction: ecriture .

    $default  reduce using rule 8 (instruction)


State 24

    9 instruction: operationBinaire .

    $default  reduce using rule 9 (instruction)


State 25

   22 operationBinaire: variable . TOK_DECAL expressionArithmetique TOK_FINSTR

    TOK_DECAL  shift, and go to state 66


State 26

   17 affectation: identificateur . TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | identificateur . TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | identificateur . TOK_AFFECT constantChaine TOK_FINSTR
   23 variable: identificateur .  [TOK_DECAL]

    TOK_AFFECT  shift, and go to state 67

    $default  reduce using rule 23 (variable)


State 27

   24 variable: constant .

    $default  reduce using rule 24 (variable)


State 28

   26 constant: constantArithmetique .

    $default  reduce using rule 26 (constant)


State 29

   27 constant: constantChaine .

    $default  reduce using rule 27 (constant)


State 30

   28 constant: constantTableau .

    $default  reduce using rule 28 (constant)


State 31

   10 instruction: boucleSi .

    $default  reduce using rule 10 (instruction)


State 32

   11 instruction: boucleSiSinon .

    $default  reduce using rule 11 (instruction)


State 33

   12 instruction: boucleSwitch .

    $default  reduce using rule 12 (instruction)


State 34

   13 instruction: bouclePour .

    $default  reduce using rule 13 (instruction)


State 35

   14 instruction: boucleTantQue .

    $default  reduce using rule 14 (instruction)


State 36

   34 element: variable .

    $default  reduce using rule 34 (element)


State 37

   23 variable: identificateur .

    $default  reduce using rule 23 (variable)


State 38

   31 constantTableau: TOK_BRACKG elements . TOK_BRACKD
   32 elements: elements . TOK_VIRG element

    TOK_BRACKD  shift, and go to state 68
    TOK_VIRG    shift, and go to state 69


State 39

   33 elements: element .

    $default  reduce using rule 33 (elements)


State 40

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   58                    | TOK_NON . expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 70
    comparaison          go to state 45


State 41

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   61                    | TOK_PARG . expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 71
    comparaison          go to state 45


State 42

   56 expressionBooleenne: TOK_CSTB .

    $default  reduce using rule 56 (expressionBooleenne)


State 43

   57 expressionBooleenne: TOK_VARB .

    $default  reduce using rule 57 (expressionBooleenne)


State 44

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   63 boucleSi: TOK_SI expressionBooleenne . TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: TOK_SI expressionBooleenne . TOK_ALORS code TOK_SINON code TOK_FINSI
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU     shift, and go to state 72
    TOK_ET     shift, and go to state 73
    TOK_EQ     shift, and go to state 74
    TOK_NQ     shift, and go to state 75
    TOK_LT     shift, and go to state 76
    TOK_GT     shift, and go to state 77
    TOK_LE     shift, and go to state 78
    TOK_GE     shift, and go to state 79
    TOK_ALORS  shift, and go to state 80


State 45

   62 expressionBooleenne: comparaison .

    $default  reduce using rule 62 (expressionBooleenne)


State 46

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   52               | TOK_MOINS . expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 82
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 47

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   38 expression: TOK_PARG . constantChaine TOK_PARD
   40           | TOK_PARG . constantTableau TOK_PARD
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   49                       | TOK_PARG . expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   61                    | TOK_PARG . expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 46
    TOK_NON     shift, and go to state 40
    TOK_PARG    shift, and go to state 83
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_CSTB    shift, and go to state 42
    TOK_VARB    shift, and go to state 43
    TOK_BRACKG  shift, and go to state 10

    identificateur          go to state 48
    constantArithmetique    go to state 49
    constantChaine          go to state 84
    constantTableau         go to state 85
    expressionArithmetique  go to state 86
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59
    expressionBooleenne     go to state 71
    comparaison             go to state 45


State 48

   41 expressionArithmetique: identificateur .

    $default  reduce using rule 41 (expressionArithmetique)


State 49

   42 expressionArithmetique: constantArithmetique .

    $default  reduce using rule 42 (expressionArithmetique)


State 50

   37 expression: constantChaine .

    $default  reduce using rule 37 (expression)


State 51

   39 expression: constantTableau .

    $default  reduce using rule 39 (expression)


State 52

   65 boucleSwitch: TOK_SWITCH expression . cases defaultcase TOK_FINSWITCH
   66 cases: . case
   67      | . case cases
   68 case: . TOK_CASE constant TOK_CASEDEF code

    TOK_CASE  shift, and go to state 87

    cases  go to state 88
    case   go to state 89


State 53

   35 expression: expressionArithmetique .  [TOK_CASE]
   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS   shift, and go to state 90
    TOK_MOINS  shift, and go to state 91
    TOK_MUL    shift, and go to state 92
    TOK_DIV    shift, and go to state 93
    TOK_PUISS  shift, and go to state 94

    $default  reduce using rule 35 (expression)


State 54

   43 expressionArithmetique: addition .

    $default  reduce using rule 43 (expressionArithmetique)


State 55

   44 expressionArithmetique: soustraction .

    $default  reduce using rule 44 (expressionArithmetique)


State 56

   45 expressionArithmetique: inversionSigne .

    $default  reduce using rule 45 (expressionArithmetique)


State 57

   46 expressionArithmetique: multiplication .

    $default  reduce using rule 46 (expressionArithmetique)


State 58

   47 expressionArithmetique: division .

    $default  reduce using rule 47 (expressionArithmetique)


State 59

   48 expressionArithmetique: puissance .

    $default  reduce using rule 48 (expressionArithmetique)


State 60

   36 expression: expressionBooleenne .  [TOK_CASE]
   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU  shift, and go to state 72
    TOK_ET  shift, and go to state 73
    TOK_EQ  shift, and go to state 74
    TOK_NQ  shift, and go to state 75
    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 36 (expression)


State 61

   70 bouclePour: TOK_FOR identificateur . TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | TOK_FOR identificateur . TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_DANS  shift, and go to state 95


State 62

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   72 boucleTantQue: TOK_TANT expressionBooleenne . TOK_FAIRE code TOK_FINT
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU     shift, and go to state 72
    TOK_ET     shift, and go to state 73
    TOK_EQ     shift, and go to state 74
    TOK_NQ     shift, and go to state 75
    TOK_LT     shift, and go to state 76
    TOK_GT     shift, and go to state 77
    TOK_LE     shift, and go to state 78
    TOK_GE     shift, and go to state 79
    TOK_FAIRE  shift, and go to state 96


State 63

   20 lecture: TOK_LEER TOK_PARG . identificateur TOK_PARD TOK_FINSTR
   25 identificateur: . TOK_VAR

    TOK_VAR  shift, and go to state 8

    identificateur  go to state 97


State 64

   21 ecriture: TOK_ESCRIR TOK_PARG . variable TOK_PARD TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_BRACKG  shift, and go to state 10

    variable              go to state 98
    identificateur        go to state 37
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30


State 65

   16 declaration: type identificateur . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 99


State 66

   22 operationBinaire: variable TOK_DECAL . expressionArithmetique TOK_FINSTR
   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 100
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 67

   17 affectation: identificateur TOK_AFFECT . expressionArithmetique TOK_FINSTR
   18            | identificateur TOK_AFFECT . expressionBooleenne TOK_FINSTR
   19            | identificateur TOK_AFFECT . constantChaine TOK_FINSTR
   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 46
    TOK_NON     shift, and go to state 40
    TOK_PARG    shift, and go to state 83
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_CSTB    shift, and go to state 42
    TOK_VARB    shift, and go to state 43

    identificateur          go to state 48
    constantArithmetique    go to state 49
    constantChaine          go to state 101
    expressionArithmetique  go to state 102
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59
    expressionBooleenne     go to state 103
    comparaison             go to state 45


State 68

   31 constantTableau: TOK_BRACKG elements TOK_BRACKD .

    $default  reduce using rule 31 (constantTableau)


State 69

   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   32 elements: elements TOK_VIRG . element
   34 element: . variable

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_BRACKG  shift, and go to state 10

    variable              go to state 36
    identificateur        go to state 37
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    element               go to state 104


State 70

   58 expressionBooleenne: TOK_NON expressionBooleenne .  [TOK_OU, TOK_ET, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   59                    | expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_EQ  shift, and go to state 74
    TOK_NQ  shift, and go to state 75
    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 58 (expressionBooleenne)

    Conflict between rule 58 and token TOK_OU resolved as reduce (TOK_OU < TOK_NON).
    Conflict between rule 58 and token TOK_ET resolved as reduce (TOK_ET < TOK_NON).
    Conflict between rule 58 and token TOK_EQ resolved as shift (TOK_NON < TOK_EQ).
    Conflict between rule 58 and token TOK_NQ resolved as shift (TOK_NON < TOK_NQ).
    Conflict between rule 58 and token TOK_LT resolved as shift (TOK_NON < TOK_LT).
    Conflict between rule 58 and token TOK_GT resolved as shift (TOK_NON < TOK_GT).
    Conflict between rule 58 and token TOK_LE resolved as shift (TOK_NON < TOK_LE).
    Conflict between rule 58 and token TOK_GE resolved as shift (TOK_NON < TOK_GE).


State 71

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   61                    | TOK_PARG expressionBooleenne . TOK_PARD
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU    shift, and go to state 72
    TOK_ET    shift, and go to state 73
    TOK_EQ    shift, and go to state 74
    TOK_NQ    shift, and go to state 75
    TOK_LT    shift, and go to state 76
    TOK_GT    shift, and go to state 77
    TOK_LE    shift, and go to state 78
    TOK_GE    shift, and go to state 79
    TOK_PARD  shift, and go to state 105


State 72

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   60                    | expressionBooleenne TOK_OU . expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 106
    comparaison          go to state 45


State 73

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   59                    | expressionBooleenne TOK_ET . expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 107
    comparaison          go to state 45


State 74

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   73            | expressionBooleenne TOK_EQ . expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 108
    comparaison          go to state 45


State 75

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   74            | expressionBooleenne TOK_NQ . expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 109
    comparaison          go to state 45


State 76

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   75            | expressionBooleenne TOK_LT . expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 110
    comparaison          go to state 45


State 77

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   76            | expressionBooleenne TOK_GT . expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 111
    comparaison          go to state 45


State 78

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   77            | expressionBooleenne TOK_LE . expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 112
    comparaison          go to state 45


State 79

   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne
   78            | expressionBooleenne TOK_GE . expressionBooleenne

    TOK_NON   shift, and go to state 40
    TOK_PARG  shift, and go to state 41
    TOK_CSTB  shift, and go to state 42
    TOK_VARB  shift, and go to state 43

    expressionBooleenne  go to state 113
    comparaison          go to state 45


State 80

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   63 boucleSi: TOK_SI expressionBooleenne TOK_ALORS . code TOK_FINSI
   64 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS . code TOK_SINON code TOK_FINSI

    $default  reduce using rule 2 (code)

    code  go to state 114


State 81

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   49                       | TOK_PARG . expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 86
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 82

   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   52 inversionSigne: TOK_MOINS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PUISS, TOK_PARD, TOK_FINSTR, TOK_CASE]
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    $default  reduce using rule 52 (inversionSigne)

    Conflict between rule 52 and token TOK_PLUS resolved as reduce (TOK_PLUS < NEG).
    Conflict between rule 52 and token TOK_MOINS resolved as reduce (TOK_MOINS < NEG).
    Conflict between rule 52 and token TOK_MUL resolved as reduce (TOK_MUL < NEG).
    Conflict between rule 52 and token TOK_DIV resolved as reduce (TOK_DIV < NEG).
    Conflict between rule 52 and token TOK_PUISS resolved as reduce (TOK_PUISS < NEG).


State 83

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   49                       | TOK_PARG . expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   56 expressionBooleenne: . TOK_CSTB
   57                    | . TOK_VARB
   58                    | . TOK_NON expressionBooleenne
   59                    | . expressionBooleenne TOK_ET expressionBooleenne
   60                    | . expressionBooleenne TOK_OU expressionBooleenne
   61                    | . TOK_PARG expressionBooleenne TOK_PARD
   61                    | TOK_PARG . expressionBooleenne TOK_PARD
   62                    | . comparaison
   73 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   74            | . expressionBooleenne TOK_NQ expressionBooleenne
   75            | . expressionBooleenne TOK_LT expressionBooleenne
   76            | . expressionBooleenne TOK_GT expressionBooleenne
   77            | . expressionBooleenne TOK_LE expressionBooleenne
   78            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 46
    TOK_NON     shift, and go to state 40
    TOK_PARG    shift, and go to state 83
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8
    TOK_CSTB    shift, and go to state 42
    TOK_VARB    shift, and go to state 43

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 86
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59
    expressionBooleenne     go to state 71
    comparaison             go to state 45


State 84

   38 expression: TOK_PARG constantChaine . TOK_PARD

    TOK_PARD  shift, and go to state 115


State 85

   40 expression: TOK_PARG constantTableau . TOK_PARD

    TOK_PARD  shift, and go to state 116


State 86

   49 expressionArithmetique: TOK_PARG expressionArithmetique . TOK_PARD
   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS   shift, and go to state 90
    TOK_MOINS  shift, and go to state 91
    TOK_MUL    shift, and go to state 92
    TOK_DIV    shift, and go to state 93
    TOK_PUISS  shift, and go to state 94
    TOK_PARD   shift, and go to state 117


State 87

   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   68 case: TOK_CASE . constant TOK_CASEDEF code

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_BRACKG  shift, and go to state 10

    constant              go to state 118
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30


State 88

   65 boucleSwitch: TOK_SWITCH expression cases . defaultcase TOK_FINSWITCH
   69 defaultcase: . TOK_DEFAULT TOK_CASEDEF code

    TOK_DEFAULT  shift, and go to state 119

    defaultcase  go to state 120


State 89

   66 cases: . case
   66      | case .  [TOK_DEFAULT]
   67      | . case cases
   67      | case . cases
   68 case: . TOK_CASE constant TOK_CASEDEF code

    TOK_CASE  shift, and go to state 87

    $default  reduce using rule 66 (cases)

    cases  go to state 121
    case   go to state 89


State 90

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   50         | expressionArithmetique TOK_PLUS . expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 122
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 91

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   51             | expressionArithmetique TOK_MOINS . expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 123
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 92

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   53               | expressionArithmetique TOK_MUL . expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 124
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 93

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   54         | expressionArithmetique TOK_DIV . expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 125
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 94

   25 identificateur: . TOK_VAR
   29 constantArithmetique: . TOK_NOMBRE
   41 expressionArithmetique: . identificateur
   42                       | . constantArithmetique
   43                       | . addition
   44                       | . soustraction
   45                       | . inversionSigne
   46                       | . multiplication
   47                       | . division
   48                       | . puissance
   49                       | . TOK_PARG expressionArithmetique TOK_PARD
   50 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   51 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   52 inversionSigne: . TOK_MOINS expressionArithmetique
   53 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   54 division: . expressionArithmetique TOK_DIV expressionArithmetique
   55 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   55          | expressionArithmetique TOK_PUISS . expressionArithmetique

    TOK_MOINS   shift, and go to state 46
    TOK_PARG    shift, and go to state 81
    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 8

    identificateur          go to state 48
    constantArithmetique    go to state 49
    expressionArithmetique  go to state 126
    addition                go to state 54
    soustraction            go to state 55
    inversionSigne          go to state 56
    multiplication          go to state 57
    division                go to state 58
    puissance               go to state 59


State 95

   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   70 bouclePour: TOK_FOR identificateur TOK_DANS . variable TOK_FAIRE code TOK_FINFOR
   71           | TOK_FOR identificateur TOK_DANS . TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_OUVR    shift, and go to state 127
    TOK_BRACKG  shift, and go to state 10

    variable              go to state 128
    identificateur        go to state 37
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30


State 96

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   72 boucleTantQue: TOK_TANT expressionBooleenne TOK_FAIRE . code TOK_FINT

    $default  reduce using rule 2 (code)

    code  go to state 129


State 97

   20 lecture: TOK_LEER TOK_PARG identificateur . TOK_PARD TOK_FINSTR

    TOK_PARD  shift, and go to state 130


State 98

   21 ecriture: TOK_ESCRIR TOK_PARG variable . TOK_PARD TOK_FINSTR

    TOK_PARD  shift, and go to state 131


State 99

   16 declaration: type identificateur TOK_FINSTR .

    $default  reduce using rule 16 (declaration)


State 100

   22 operationBinaire: variable TOK_DECAL expressionArithmetique . TOK_FINSTR
   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS    shift, and go to state 90
    TOK_MOINS   shift, and go to state 91
    TOK_MUL     shift, and go to state 92
    TOK_DIV     shift, and go to state 93
    TOK_PUISS   shift, and go to state 94
    TOK_FINSTR  shift, and go to state 132


State 101

   19 affectation: identificateur TOK_AFFECT constantChaine . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 133


State 102

   17 affectation: identificateur TOK_AFFECT expressionArithmetique . TOK_FINSTR
   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS    shift, and go to state 90
    TOK_MOINS   shift, and go to state 91
    TOK_MUL     shift, and go to state 92
    TOK_DIV     shift, and go to state 93
    TOK_PUISS   shift, and go to state 94
    TOK_FINSTR  shift, and go to state 134


State 103

   18 affectation: identificateur TOK_AFFECT expressionBooleenne . TOK_FINSTR
   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU      shift, and go to state 72
    TOK_ET      shift, and go to state 73
    TOK_EQ      shift, and go to state 74
    TOK_NQ      shift, and go to state 75
    TOK_LT      shift, and go to state 76
    TOK_GT      shift, and go to state 77
    TOK_LE      shift, and go to state 78
    TOK_GE      shift, and go to state 79
    TOK_FINSTR  shift, and go to state 135


State 104

   32 elements: elements TOK_VIRG element .

    $default  reduce using rule 32 (elements)


State 105

   61 expressionBooleenne: TOK_PARG expressionBooleenne TOK_PARD .

    $default  reduce using rule 61 (expressionBooleenne)


State 106

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   60                    | expressionBooleenne TOK_OU expressionBooleenne .  [TOK_OU, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_ET  shift, and go to state 73
    TOK_EQ  shift, and go to state 74
    TOK_NQ  shift, and go to state 75
    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 60 (expressionBooleenne)

    Conflict between rule 60 and token TOK_OU resolved as reduce (%left TOK_OU).
    Conflict between rule 60 and token TOK_ET resolved as shift (TOK_OU < TOK_ET).
    Conflict between rule 60 and token TOK_EQ resolved as shift (TOK_OU < TOK_EQ).
    Conflict between rule 60 and token TOK_NQ resolved as shift (TOK_OU < TOK_NQ).
    Conflict between rule 60 and token TOK_LT resolved as shift (TOK_OU < TOK_LT).
    Conflict between rule 60 and token TOK_GT resolved as shift (TOK_OU < TOK_GT).
    Conflict between rule 60 and token TOK_LE resolved as shift (TOK_OU < TOK_LE).
    Conflict between rule 60 and token TOK_GE resolved as shift (TOK_OU < TOK_GE).


State 107

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   59                    | expressionBooleenne TOK_ET expressionBooleenne .  [TOK_OU, TOK_ET, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_EQ  shift, and go to state 74
    TOK_NQ  shift, and go to state 75
    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 59 (expressionBooleenne)

    Conflict between rule 59 and token TOK_OU resolved as reduce (TOK_OU < TOK_ET).
    Conflict between rule 59 and token TOK_ET resolved as reduce (%left TOK_ET).
    Conflict between rule 59 and token TOK_EQ resolved as shift (TOK_ET < TOK_EQ).
    Conflict between rule 59 and token TOK_NQ resolved as shift (TOK_ET < TOK_NQ).
    Conflict between rule 59 and token TOK_LT resolved as shift (TOK_ET < TOK_LT).
    Conflict between rule 59 and token TOK_GT resolved as shift (TOK_ET < TOK_GT).
    Conflict between rule 59 and token TOK_LE resolved as shift (TOK_ET < TOK_LE).
    Conflict between rule 59 and token TOK_GE resolved as shift (TOK_ET < TOK_GE).


State 108

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   73            | expressionBooleenne TOK_EQ expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_NQ  shift, and go to state 75
    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 73 (comparaison)

    Conflict between rule 73 and token TOK_OU resolved as reduce (TOK_OU < TOK_EQ).
    Conflict between rule 73 and token TOK_ET resolved as reduce (TOK_ET < TOK_EQ).
    Conflict between rule 73 and token TOK_EQ resolved as reduce (%left TOK_EQ).
    Conflict between rule 73 and token TOK_NQ resolved as shift (TOK_EQ < TOK_NQ).
    Conflict between rule 73 and token TOK_LT resolved as shift (TOK_EQ < TOK_LT).
    Conflict between rule 73 and token TOK_GT resolved as shift (TOK_EQ < TOK_GT).
    Conflict between rule 73 and token TOK_LE resolved as shift (TOK_EQ < TOK_LE).
    Conflict between rule 73 and token TOK_GE resolved as shift (TOK_EQ < TOK_GE).


State 109

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   74            | expressionBooleenne TOK_NQ expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 74 (comparaison)

    Conflict between rule 74 and token TOK_OU resolved as reduce (TOK_OU < TOK_NQ).
    Conflict between rule 74 and token TOK_ET resolved as reduce (TOK_ET < TOK_NQ).
    Conflict between rule 74 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_NQ).
    Conflict between rule 74 and token TOK_NQ resolved as reduce (%left TOK_NQ).
    Conflict between rule 74 and token TOK_LT resolved as shift (TOK_NQ < TOK_LT).
    Conflict between rule 74 and token TOK_GT resolved as shift (TOK_NQ < TOK_GT).
    Conflict between rule 74 and token TOK_LE resolved as shift (TOK_NQ < TOK_LE).
    Conflict between rule 74 and token TOK_GE resolved as shift (TOK_NQ < TOK_GE).


State 110

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   75            | expressionBooleenne TOK_LT expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 75 (comparaison)

    Conflict between rule 75 and token TOK_OU resolved as reduce (TOK_OU < TOK_LT).
    Conflict between rule 75 and token TOK_ET resolved as reduce (TOK_ET < TOK_LT).
    Conflict between rule 75 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_LT).
    Conflict between rule 75 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_LT).
    Conflict between rule 75 and token TOK_LT resolved as reduce (%left TOK_LT).
    Conflict between rule 75 and token TOK_GT resolved as shift (TOK_LT < TOK_GT).
    Conflict between rule 75 and token TOK_LE resolved as shift (TOK_LT < TOK_LE).
    Conflict between rule 75 and token TOK_GE resolved as shift (TOK_LT < TOK_GE).


State 111

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   76            | expressionBooleenne TOK_GT expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_GT, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 76 (comparaison)

    Conflict between rule 76 and token TOK_OU resolved as reduce (TOK_OU < TOK_GT).
    Conflict between rule 76 and token TOK_ET resolved as reduce (TOK_ET < TOK_GT).
    Conflict between rule 76 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_GT).
    Conflict between rule 76 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_GT).
    Conflict between rule 76 and token TOK_LT resolved as reduce (TOK_LT < TOK_GT).
    Conflict between rule 76 and token TOK_GT resolved as reduce (%left TOK_GT).
    Conflict between rule 76 and token TOK_LE resolved as shift (TOK_GT < TOK_LE).
    Conflict between rule 76 and token TOK_GE resolved as shift (TOK_GT < TOK_GE).


State 112

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   77            | expressionBooleenne TOK_LE expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_GT, TOK_LE, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   78            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_GE  shift, and go to state 79

    $default  reduce using rule 77 (comparaison)

    Conflict between rule 77 and token TOK_OU resolved as reduce (TOK_OU < TOK_LE).
    Conflict between rule 77 and token TOK_ET resolved as reduce (TOK_ET < TOK_LE).
    Conflict between rule 77 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_LE).
    Conflict between rule 77 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_LE).
    Conflict between rule 77 and token TOK_LT resolved as reduce (TOK_LT < TOK_LE).
    Conflict between rule 77 and token TOK_GT resolved as reduce (TOK_GT < TOK_LE).
    Conflict between rule 77 and token TOK_LE resolved as reduce (%left TOK_LE).
    Conflict between rule 77 and token TOK_GE resolved as shift (TOK_LE < TOK_GE).


State 113

   59 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   60                    | expressionBooleenne . TOK_OU expressionBooleenne
   73 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   74            | expressionBooleenne . TOK_NQ expressionBooleenne
   75            | expressionBooleenne . TOK_LT expressionBooleenne
   76            | expressionBooleenne . TOK_GT expressionBooleenne
   77            | expressionBooleenne . TOK_LE expressionBooleenne
   78            | expressionBooleenne . TOK_GE expressionBooleenne
   78            | expressionBooleenne TOK_GE expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_GT, TOK_LE, TOK_GE, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]

    $default  reduce using rule 78 (comparaison)

    Conflict between rule 78 and token TOK_OU resolved as reduce (TOK_OU < TOK_GE).
    Conflict between rule 78 and token TOK_ET resolved as reduce (TOK_ET < TOK_GE).
    Conflict between rule 78 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_GE).
    Conflict between rule 78 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_GE).
    Conflict between rule 78 and token TOK_LT resolved as reduce (TOK_LT < TOK_GE).
    Conflict between rule 78 and token TOK_GT resolved as reduce (TOK_GT < TOK_GE).
    Conflict between rule 78 and token TOK_LE resolved as reduce (TOK_LE < TOK_GE).
    Conflict between rule 78 and token TOK_GE resolved as reduce (%left TOK_GE).


State 114

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   63         | TOK_SI expressionBooleenne TOK_ALORS code . TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   64              | TOK_SI expressionBooleenne TOK_ALORS code . TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_SINON   shift, and go to state 136
    TOK_FINSI   shift, and go to state 137
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 115

   38 expression: TOK_PARG constantChaine TOK_PARD .

    $default  reduce using rule 38 (expression)


State 116

   40 expression: TOK_PARG constantTableau TOK_PARD .

    $default  reduce using rule 40 (expression)


State 117

   49 expressionArithmetique: TOK_PARG expressionArithmetique TOK_PARD .

    $default  reduce using rule 49 (expressionArithmetique)


State 118

   68 case: TOK_CASE constant . TOK_CASEDEF code

    TOK_CASEDEF  shift, and go to state 138


State 119

   69 defaultcase: TOK_DEFAULT . TOK_CASEDEF code

    TOK_CASEDEF  shift, and go to state 139


State 120

   65 boucleSwitch: TOK_SWITCH expression cases defaultcase . TOK_FINSWITCH

    TOK_FINSWITCH  shift, and go to state 140


State 121

   67 cases: case cases .

    $default  reduce using rule 67 (cases)


State 122

   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   50         | expressionArithmetique TOK_PLUS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_PARD, TOK_FINSTR, TOK_CASE]
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_MUL    shift, and go to state 92
    TOK_DIV    shift, and go to state 93
    TOK_PUISS  shift, and go to state 94

    $default  reduce using rule 50 (addition)

    Conflict between rule 50 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 50 and token TOK_MOINS resolved as reduce (%left TOK_MOINS).
    Conflict between rule 50 and token TOK_MUL resolved as shift (TOK_PLUS < TOK_MUL).
    Conflict between rule 50 and token TOK_DIV resolved as shift (TOK_PLUS < TOK_DIV).
    Conflict between rule 50 and token TOK_PUISS resolved as shift (TOK_PLUS < TOK_PUISS).


State 123

   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   51             | expressionArithmetique TOK_MOINS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_PARD, TOK_FINSTR, TOK_CASE]
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_MUL    shift, and go to state 92
    TOK_DIV    shift, and go to state 93
    TOK_PUISS  shift, and go to state 94

    $default  reduce using rule 51 (soustraction)

    Conflict between rule 51 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 51 and token TOK_MOINS resolved as reduce (%left TOK_MOINS).
    Conflict between rule 51 and token TOK_MUL resolved as shift (TOK_MOINS < TOK_MUL).
    Conflict between rule 51 and token TOK_DIV resolved as shift (TOK_MOINS < TOK_DIV).
    Conflict between rule 51 and token TOK_PUISS resolved as shift (TOK_MOINS < TOK_PUISS).


State 124

   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   53               | expressionArithmetique TOK_MUL expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PARD, TOK_FINSTR, TOK_CASE]
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PUISS  shift, and go to state 94

    $default  reduce using rule 53 (multiplication)

    Conflict between rule 53 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_MUL).
    Conflict between rule 53 and token TOK_MOINS resolved as reduce (TOK_MOINS < TOK_MUL).
    Conflict between rule 53 and token TOK_MUL resolved as reduce (%left TOK_MUL).
    Conflict between rule 53 and token TOK_DIV resolved as reduce (%left TOK_DIV).
    Conflict between rule 53 and token TOK_PUISS resolved as shift (TOK_MUL < TOK_PUISS).


State 125

   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   54         | expressionArithmetique TOK_DIV expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PARD, TOK_FINSTR, TOK_CASE]
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PUISS  shift, and go to state 94

    $default  reduce using rule 54 (division)

    Conflict between rule 54 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_DIV).
    Conflict between rule 54 and token TOK_MOINS resolved as reduce (TOK_MOINS < TOK_DIV).
    Conflict between rule 54 and token TOK_MUL resolved as reduce (%left TOK_MUL).
    Conflict between rule 54 and token TOK_DIV resolved as reduce (%left TOK_DIV).
    Conflict between rule 54 and token TOK_PUISS resolved as shift (TOK_DIV < TOK_PUISS).


State 126

   50 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   51 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   53 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   54 division: expressionArithmetique . TOK_DIV expressionArithmetique
   55 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique
   55          | expressionArithmetique TOK_PUISS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PARD, TOK_FINSTR, TOK_CASE]

    TOK_PUISS  shift, and go to state 94

    $default  reduce using rule 55 (puissance)

    Conflict between rule 55 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_PUISS).
    Conflict between rule 55 and token TOK_MOINS resolved as reduce (TOK_MOINS < TOK_PUISS).
    Conflict between rule 55 and token TOK_MUL resolved as reduce (TOK_MUL < TOK_PUISS).
    Conflict between rule 55 and token TOK_DIV resolved as reduce (TOK_DIV < TOK_PUISS).
    Conflict between rule 55 and token TOK_PUISS resolved as shift (%right TOK_PUISS).


State 127

   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR . variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_BRACKG  shift, and go to state 10

    variable              go to state 141
    identificateur        go to state 37
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30


State 128

   70 bouclePour: TOK_FOR identificateur TOK_DANS variable . TOK_FAIRE code TOK_FINFOR

    TOK_FAIRE  shift, and go to state 142


State 129

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT
   72              | TOK_TANT expressionBooleenne TOK_FAIRE code . TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_TANT    shift, and go to state 15
    TOK_FINT    shift, and go to state 143
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 130

   20 lecture: TOK_LEER TOK_PARG identificateur TOK_PARD . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 144


State 131

   21 ecriture: TOK_ESCRIR TOK_PARG variable TOK_PARD . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 145


State 132

   22 operationBinaire: variable TOK_DECAL expressionArithmetique TOK_FINSTR .

    $default  reduce using rule 22 (operationBinaire)


State 133

   19 affectation: identificateur TOK_AFFECT constantChaine TOK_FINSTR .

    $default  reduce using rule 19 (affectation)


State 134

   17 affectation: identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR .

    $default  reduce using rule 17 (affectation)


State 135

   18 affectation: identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR .

    $default  reduce using rule 18 (affectation)


State 136

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   64 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON . code TOK_FINSI

    $default  reduce using rule 2 (code)

    code  go to state 146


State 137

   63 boucleSi: TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI .

    $default  reduce using rule 63 (boucleSi)


State 138

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   68 case: TOK_CASE constant TOK_CASEDEF . code

    $default  reduce using rule 2 (code)

    code  go to state 147


State 139

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   69 defaultcase: TOK_DEFAULT TOK_CASEDEF . code

    $default  reduce using rule 2 (code)

    code  go to state 148


State 140

   65 boucleSwitch: TOK_SWITCH expression cases defaultcase TOK_FINSWITCH .

    $default  reduce using rule 65 (boucleSwitch)


State 141

   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable . TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_DPTS  shift, and go to state 149


State 142

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   70 bouclePour: TOK_FOR identificateur TOK_DANS variable TOK_FAIRE . code TOK_FINFOR

    $default  reduce using rule 2 (code)

    code  go to state 150


State 143

   72 boucleTantQue: TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT .

    $default  reduce using rule 72 (boucleTantQue)


State 144

   20 lecture: TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR .

    $default  reduce using rule 20 (lecture)


State 145

   21 ecriture: TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR .

    $default  reduce using rule 21 (ecriture)


State 146

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   64              | TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code . TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_FINSI   shift, and go to state 151
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 147

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   68 case: TOK_CASE constant TOK_CASEDEF code .  [TOK_CASE, TOK_DEFAULT]
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    TOK_CASE     reduce using rule 68 (case)
    TOK_DEFAULT  reduce using rule 68 (case)

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 148

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   69 defaultcase: TOK_DEFAULT TOK_CASEDEF code .  [TOK_FINSWITCH]
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    TOK_FINSWITCH  reduce using rule 69 (defaultcase)

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 149

   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS . variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_BRACKG  shift, and go to state 10

    variable              go to state 152
    identificateur        go to state 37
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30


State 150

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   70           | TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code . TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_FINFOR  shift, and go to state 153
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 151

   64 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI .

    $default  reduce using rule 64 (boucleSiSinon)


State 152

   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable . TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_FERM  shift, and go to state 154


State 153

   70 bouclePour: TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR .

    $default  reduce using rule 70 (bouclePour)


State 154

   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM . TOK_FAIRE code TOK_FINFOR

    TOK_FAIRE  shift, and go to state 155


State 155

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE . code TOK_FINFOR

    $default  reduce using rule 2 (code)

    code  go to state 156


State 156

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   21 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   22 operationBinaire: . variable TOK_DECAL expressionArithmetique TOK_FINSTR
   23 variable: . identificateur
   24         | . constant
   25 identificateur: . TOK_VAR
   26 constant: . constantArithmetique
   27         | . constantChaine
   28         | . constantTableau
   29 constantArithmetique: . TOK_NOMBRE
   30 constantChaine: . TOK_STR
   31 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   63 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   64 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   65 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   70 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   71           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   71           | TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code . TOK_FINFOR
   72 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_STR     shift, and go to state 7
    TOK_VAR     shift, and go to state 8
    TOK_TYPE    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 10
    TOK_SI      shift, and go to state 12
    TOK_SWITCH  shift, and go to state 13
    TOK_FOR     shift, and go to state 14
    TOK_FINFOR  shift, and go to state 157
    TOK_TANT    shift, and go to state 15
    TOK_LEER    shift, and go to state 16
    TOK_ESCRIR  shift, and go to state 17

    instruction           go to state 18
    type                  go to state 19
    declaration           go to state 20
    affectation           go to state 21
    lecture               go to state 22
    ecriture              go to state 23
    operationBinaire      go to state 24
    variable              go to state 25
    identificateur        go to state 26
    constant              go to state 27
    constantArithmetique  go to state 28
    constantChaine        go to state 29
    constantTableau       go to state 30
    boucleSi              go to state 31
    boucleSiSinon         go to state 32
    boucleSwitch          go to state 33
    bouclePour            go to state 34
    boucleTantQue         go to state 35


State 157

   71 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR .

    $default  reduce using rule 71 (bouclePour)
