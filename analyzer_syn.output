Terminals unused in grammar

    TOK_MOD
    TOK_ACCOLG
    TOK_ACCOLD
    TOK_PIPE


Grammar

    0 $accept: script $end

    1 script: TOK_FINI code TOK_FINF

    2 code: %empty
    3     | code instruction
    4     | code error

    5 instruction: declaration
    6            | affectation
    7            | lecture
    8            | ecriture
    9            | operationBinaire
   10            | boucleSi
   11            | boucleSiSinon
   12            | boucleSwitch
   13            | bouclePour
   14            | boucleTantQue

   15 type: TOK_TYPE

   16 declaration: type identificateur TOK_FINSTR

   17 affectation: identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | identificateur TOK_AFFECT constantTableau TOK_FINSTR

   22 lecture: TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR

   23 ecriture: TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR

   24 operationBinaire: variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | variable TOK_DECAL identificateur TOK_FINSTR

   26 variable: identificateur
   27         | constant

   28 identificateur: TOK_VAR

   29 constant: constantArithmetique
   30         | constantChaine
   31         | constantCaractere
   32         | constantTableau

   33 constantArithmetique: constantEntier
   34                     | constantReelle

   35 constantEntier: TOK_NOMBRE

   36 constantReelle: TOK_FLOAT

   37 constantChaine: TOK_STR

   38 constantCaractere: TOK_CHAR

   39 constantTableau: TOK_BRACKG elements TOK_BRACKD
   40                | TOK_BRACKG TOK_BRACKD

   41 elements: elements TOK_VIRG element
   42         | element

   43 element: identificateur
   44        | constantEntier
   45        | constantReelle
   46        | constantChaine
   47        | constantCaractere
   48        | constantTableau

   49 expression: expressionArithmetique
   50           | expressionBooleenne
   51           | constantChaine
   52           | TOK_PARG constantChaine TOK_PARD
   53           | constantTableau
   54           | TOK_PARG constantTableau TOK_PARD

   55 expressionArithmetique: identificateur
   56                       | constantArithmetique
   57                       | addition
   58                       | soustraction
   59                       | inversionSigne
   60                       | multiplication
   61                       | division
   62                       | puissance
   63                       | TOK_PARG expressionArithmetique TOK_PARD

   64 addition: expressionArithmetique TOK_PLUS expressionArithmetique

   65 soustraction: expressionArithmetique TOK_MOINS expressionArithmetique

   66 inversionSigne: TOK_MOINS expressionArithmetique

   67 multiplication: expressionArithmetique TOK_MUL expressionArithmetique

   68 division: expressionArithmetique TOK_DIV expressionArithmetique

   69 puissance: expressionArithmetique TOK_PUISS expressionArithmetique

   70 expressionBooleenne: TOK_CSTB
   71                    | TOK_VARB
   72                    | TOK_NON expressionBooleenne
   73                    | expressionBooleenne TOK_ET expressionBooleenne
   74                    | expressionBooleenne TOK_OU expressionBooleenne
   75                    | TOK_PARG expressionBooleenne TOK_PARD
   76                    | comparaison

   77 boucleSi: TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI

   78 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI

   79 boucleSwitch: TOK_SWITCH expression cases defaultcase TOK_FINSWITCH

   80 cases: case
   81      | case cases

   82 case: TOK_CASE constant TOK_CASEDEF code

   83 defaultcase: TOK_DEFAULT TOK_CASEDEF code

   84 bouclePour: TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

   86 boucleTantQue: TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

   87 comparaison: expressionBooleenne TOK_EQ expressionBooleenne
   88            | expressionBooleenne TOK_NQ expressionBooleenne
   89            | expressionBooleenne TOK_LT expressionBooleenne
   90            | expressionBooleenne TOK_GT expressionBooleenne
   91            | expressionBooleenne TOK_LE expressionBooleenne
   92            | expressionBooleenne TOK_GE expressionBooleenne


Terminals, with rules where they appear

    $end (0) 0
    error (256) 4
    TOK_DECAL (258) 24 25
    TOK_MOD (259)
    TOK_PLUS (260) 64
    TOK_MOINS (261) 65 66
    TOK_MUL (262) 67
    TOK_DIV (263) 68
    TOK_PUISS (264) 69
    TOK_OU (265) 74
    TOK_ET (266) 73
    TOK_NON (267) 72
    TOK_EQ (268) 87
    TOK_NQ (269) 88
    TOK_LT (270) 89
    TOK_GT (271) 90
    TOK_LE (272) 91
    TOK_GE (273) 92
    TOK_PARG (274) 22 23 52 54 63 75
    TOK_PARD (275) 22 23 52 54 63 75
    NEG (276)
    TOK_NOMBRE <texte> (277) 35
    TOK_FLOAT <texte> (278) 36
    TOK_STR <texte> (279) 37
    TOK_CHAR <texte> (280) 38
    TOK_VAR <texte> (281) 28
    TOK_CSTB <texte> (282) 70
    TOK_VARB <texte> (283) 71
    TOK_TYPE <texte> (284) 15
    TOK_AFFECT (285) 17 18 19 20 21
    TOK_OUVR (286) 85
    TOK_FERM (287) 85
    TOK_BRACKG (288) 39 40
    TOK_BRACKD (289) 39 40
    TOK_ACCOLG (290)
    TOK_ACCOLD (291)
    TOK_VIRG (292) 41
    TOK_DPTS (293) 85
    TOK_PIPE (294)
    TOK_FINSTR (295) 16 17 18 19 20 21 22 23 24 25
    TOK_FINI (296) 1
    TOK_FINF (297) 1
    TOK_SI (298) 77 78
    TOK_ALORS (299) 77 78
    TOK_SINON (300) 78
    TOK_FINSI (301) 77 78
    TOK_SWITCH (302) 79
    TOK_CASE (303) 82
    TOK_DEFAULT (304) 83
    TOK_CASEDEF (305) 82 83
    TOK_FINSWITCH (306) 79
    TOK_FOR (307) 84 85
    TOK_DANS (308) 84 85
    TOK_FAIRE (309) 84 85 86
    TOK_FINFOR (310) 84 85
    TOK_TANT (311) 86
    TOK_FINT (312) 86
    TOK_LEER (313) 22
    TOK_ESCRIR (314) 23


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    script <texte> (61)
        on left: 1
        on right: 0
    code <texte> (62)
        on left: 2 3 4
        on right: 1 3 4 77 78 82 83 84 85 86
    instruction <texte> (63)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3
    type <texte> (64)
        on left: 15
        on right: 16
    declaration <texte> (65)
        on left: 16
        on right: 5
    affectation <texte> (66)
        on left: 17 18 19 20 21
        on right: 6
    lecture <texte> (67)
        on left: 22
        on right: 7
    ecriture <texte> (68)
        on left: 23
        on right: 8
    operationBinaire <texte> (69)
        on left: 24 25
        on right: 9
    variable <texte> (70)
        on left: 26 27
        on right: 23 24 25 84 85
    identificateur <texte> (71)
        on left: 28
        on right: 16 17 18 19 20 21 22 25 26 43 55 84 85
    constant <texte> (72)
        on left: 29 30 31 32
        on right: 27 82
    constantArithmetique <texte> (73)
        on left: 33 34
        on right: 29 56
    constantEntier <texte> (74)
        on left: 35
        on right: 24 33 44
    constantReelle <texte> (75)
        on left: 36
        on right: 34 45
    constantChaine <texte> (76)
        on left: 37
        on right: 19 30 46 51 52
    constantCaractere <texte> (77)
        on left: 38
        on right: 20 31 47
    constantTableau <texte> (78)
        on left: 39 40
        on right: 21 32 48 53 54
    elements <texte> (79)
        on left: 41 42
        on right: 39 41
    element <texte> (80)
        on left: 43 44 45 46 47 48
        on right: 41 42
    expression <texte> (81)
        on left: 49 50 51 52 53 54
        on right: 79
    expressionArithmetique <texte> (82)
        on left: 55 56 57 58 59 60 61 62 63
        on right: 17 49 63 64 65 66 67 68 69
    addition <texte> (83)
        on left: 64
        on right: 57
    soustraction <texte> (84)
        on left: 65
        on right: 58
    inversionSigne <texte> (85)
        on left: 66
        on right: 59
    multiplication <texte> (86)
        on left: 67
        on right: 60
    division <texte> (87)
        on left: 68
        on right: 61
    puissance <texte> (88)
        on left: 69
        on right: 62
    expressionBooleenne <texte> (89)
        on left: 70 71 72 73 74 75 76
        on right: 18 50 72 73 74 75 77 78 86 87 88 89 90 91 92
    boucleSi <texte> (90)
        on left: 77
        on right: 10
    boucleSiSinon <texte> (91)
        on left: 78
        on right: 11
    boucleSwitch <texte> (92)
        on left: 79
        on right: 12
    cases <texte> (93)
        on left: 80 81
        on right: 79 81
    case <texte> (94)
        on left: 82
        on right: 80 81
    defaultcase <texte> (95)
        on left: 83
        on right: 79
    bouclePour <texte> (96)
        on left: 84 85
        on right: 13
    boucleTantQue <texte> (97)
        on left: 86
        on right: 14
    comparaison <texte> (98)
        on left: 87 88 89 90 91 92
        on right: 76


State 0

    0 $accept: . script $end
    1 script: . TOK_FINI code TOK_FINF

    TOK_FINI  shift, and go to state 1

    script  go to state 2


State 1

    1 script: TOK_FINI . code TOK_FINF
    2 code: . %empty
    3     | . code instruction
    4     | . code error

    $default  reduce using rule 2 (code)

    code  go to state 3


State 2

    0 $accept: script . $end

    $end  shift, and go to state 4


State 3

    1 script: TOK_FINI code . TOK_FINF
    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_FINF    shift, and go to state 13
    TOK_SI      shift, and go to state 14
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 4

    0 $accept: script $end .

    $default  accept


State 5

    4 code: code error .

    $default  reduce using rule 4 (code)


State 6

   35 constantEntier: TOK_NOMBRE .

    $default  reduce using rule 35 (constantEntier)


State 7

   36 constantReelle: TOK_FLOAT .

    $default  reduce using rule 36 (constantReelle)


State 8

   37 constantChaine: TOK_STR .

    $default  reduce using rule 37 (constantChaine)


State 9

   38 constantCaractere: TOK_CHAR .

    $default  reduce using rule 38 (constantCaractere)


State 10

   28 identificateur: TOK_VAR .

    $default  reduce using rule 28 (identificateur)


State 11

   15 type: TOK_TYPE .

    $default  reduce using rule 15 (type)


State 12

   28 identificateur: . TOK_VAR
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   39                | TOK_BRACKG . elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   40                | TOK_BRACKG . TOK_BRACKD
   41 elements: . elements TOK_VIRG element
   42         | . element
   43 element: . identificateur
   44        | . constantEntier
   45        | . constantReelle
   46        | . constantChaine
   47        | . constantCaractere
   48        | . constantTableau

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_BRACKG  shift, and go to state 12
    TOK_BRACKD  shift, and go to state 41

    identificateur     go to state 42
    constantEntier     go to state 43
    constantReelle     go to state 44
    constantChaine     go to state 45
    constantCaractere  go to state 46
    constantTableau    go to state 47
    elements           go to state 48
    element            go to state 49


State 13

    1 script: TOK_FINI code TOK_FINF .

    $default  reduce using rule 1 (script)


State 14

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   77 boucleSi: TOK_SI . expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: TOK_SI . expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 54
    comparaison          go to state 55


State 15

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   49 expression: . expressionArithmetique
   50           | . expressionBooleenne
   51           | . constantChaine
   52           | . TOK_PARG constantChaine TOK_PARD
   53           | . constantTableau
   54           | . TOK_PARG constantTableau TOK_PARD
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   79 boucleSwitch: TOK_SWITCH . expression cases defaultcase TOK_FINSWITCH
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 56
    TOK_NON     shift, and go to state 50
    TOK_PARG    shift, and go to state 57
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_VAR     shift, and go to state 10
    TOK_CSTB    shift, and go to state 52
    TOK_VARB    shift, and go to state 53
    TOK_BRACKG  shift, and go to state 12

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    constantChaine          go to state 60
    constantTableau         go to state 61
    expression              go to state 62
    expressionArithmetique  go to state 63
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69
    expressionBooleenne     go to state 70
    comparaison             go to state 55


State 16

   28 identificateur: . TOK_VAR
   84 bouclePour: TOK_FOR . identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | TOK_FOR . identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_VAR  shift, and go to state 10

    identificateur  go to state 71


State 17

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   86 boucleTantQue: TOK_TANT . expressionBooleenne TOK_FAIRE code TOK_FINT
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 72
    comparaison          go to state 55


State 18

   22 lecture: TOK_LEER . TOK_PARG identificateur TOK_PARD TOK_FINSTR

    TOK_PARG  shift, and go to state 73


State 19

   23 ecriture: TOK_ESCRIR . TOK_PARG variable TOK_PARD TOK_FINSTR

    TOK_PARG  shift, and go to state 74


State 20

    3 code: code instruction .

    $default  reduce using rule 3 (code)


State 21

   16 declaration: type . identificateur TOK_FINSTR
   28 identificateur: . TOK_VAR

    TOK_VAR  shift, and go to state 10

    identificateur  go to state 75


State 22

    5 instruction: declaration .

    $default  reduce using rule 5 (instruction)


State 23

    6 instruction: affectation .

    $default  reduce using rule 6 (instruction)


State 24

    7 instruction: lecture .

    $default  reduce using rule 7 (instruction)


State 25

    8 instruction: ecriture .

    $default  reduce using rule 8 (instruction)


State 26

    9 instruction: operationBinaire .

    $default  reduce using rule 9 (instruction)


State 27

   24 operationBinaire: variable . TOK_DECAL constantEntier TOK_FINSTR
   25                 | variable . TOK_DECAL identificateur TOK_FINSTR

    TOK_DECAL  shift, and go to state 76


State 28

   17 affectation: identificateur . TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | identificateur . TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | identificateur . TOK_AFFECT constantChaine TOK_FINSTR
   20            | identificateur . TOK_AFFECT constantCaractere TOK_FINSTR
   21            | identificateur . TOK_AFFECT constantTableau TOK_FINSTR
   26 variable: identificateur .  [TOK_DECAL]

    TOK_AFFECT  shift, and go to state 77

    $default  reduce using rule 26 (variable)


State 29

   27 variable: constant .

    $default  reduce using rule 27 (variable)


State 30

   29 constant: constantArithmetique .

    $default  reduce using rule 29 (constant)


State 31

   33 constantArithmetique: constantEntier .

    $default  reduce using rule 33 (constantArithmetique)


State 32

   34 constantArithmetique: constantReelle .

    $default  reduce using rule 34 (constantArithmetique)


State 33

   30 constant: constantChaine .

    $default  reduce using rule 30 (constant)


State 34

   31 constant: constantCaractere .

    $default  reduce using rule 31 (constant)


State 35

   32 constant: constantTableau .

    $default  reduce using rule 32 (constant)


State 36

   10 instruction: boucleSi .

    $default  reduce using rule 10 (instruction)


State 37

   11 instruction: boucleSiSinon .

    $default  reduce using rule 11 (instruction)


State 38

   12 instruction: boucleSwitch .

    $default  reduce using rule 12 (instruction)


State 39

   13 instruction: bouclePour .

    $default  reduce using rule 13 (instruction)


State 40

   14 instruction: boucleTantQue .

    $default  reduce using rule 14 (instruction)


State 41

   40 constantTableau: TOK_BRACKG TOK_BRACKD .

    $default  reduce using rule 40 (constantTableau)


State 42

   43 element: identificateur .

    $default  reduce using rule 43 (element)


State 43

   44 element: constantEntier .

    $default  reduce using rule 44 (element)


State 44

   45 element: constantReelle .

    $default  reduce using rule 45 (element)


State 45

   46 element: constantChaine .

    $default  reduce using rule 46 (element)


State 46

   47 element: constantCaractere .

    $default  reduce using rule 47 (element)


State 47

   48 element: constantTableau .

    $default  reduce using rule 48 (element)


State 48

   39 constantTableau: TOK_BRACKG elements . TOK_BRACKD
   41 elements: elements . TOK_VIRG element

    TOK_BRACKD  shift, and go to state 78
    TOK_VIRG    shift, and go to state 79


State 49

   42 elements: element .

    $default  reduce using rule 42 (elements)


State 50

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   72                    | TOK_NON . expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 80
    comparaison          go to state 55


State 51

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   75                    | TOK_PARG . expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 81
    comparaison          go to state 55


State 52

   70 expressionBooleenne: TOK_CSTB .

    $default  reduce using rule 70 (expressionBooleenne)


State 53

   71 expressionBooleenne: TOK_VARB .

    $default  reduce using rule 71 (expressionBooleenne)


State 54

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   77 boucleSi: TOK_SI expressionBooleenne . TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: TOK_SI expressionBooleenne . TOK_ALORS code TOK_SINON code TOK_FINSI
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU     shift, and go to state 82
    TOK_ET     shift, and go to state 83
    TOK_EQ     shift, and go to state 84
    TOK_NQ     shift, and go to state 85
    TOK_LT     shift, and go to state 86
    TOK_GT     shift, and go to state 87
    TOK_LE     shift, and go to state 88
    TOK_GE     shift, and go to state 89
    TOK_ALORS  shift, and go to state 90


State 55

   76 expressionBooleenne: comparaison .

    $default  reduce using rule 76 (expressionBooleenne)


State 56

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   66               | TOK_MOINS . expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 92
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 57

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   52 expression: TOK_PARG . constantChaine TOK_PARD
   54           | TOK_PARG . constantTableau TOK_PARD
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   63                       | TOK_PARG . expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   75                    | TOK_PARG . expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 56
    TOK_NON     shift, and go to state 50
    TOK_PARG    shift, and go to state 93
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_VAR     shift, and go to state 10
    TOK_CSTB    shift, and go to state 52
    TOK_VARB    shift, and go to state 53
    TOK_BRACKG  shift, and go to state 12

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    constantChaine          go to state 94
    constantTableau         go to state 95
    expressionArithmetique  go to state 96
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69
    expressionBooleenne     go to state 81
    comparaison             go to state 55


State 58

   55 expressionArithmetique: identificateur .

    $default  reduce using rule 55 (expressionArithmetique)


State 59

   56 expressionArithmetique: constantArithmetique .

    $default  reduce using rule 56 (expressionArithmetique)


State 60

   51 expression: constantChaine .

    $default  reduce using rule 51 (expression)


State 61

   53 expression: constantTableau .

    $default  reduce using rule 53 (expression)


State 62

   79 boucleSwitch: TOK_SWITCH expression . cases defaultcase TOK_FINSWITCH
   80 cases: . case
   81      | . case cases
   82 case: . TOK_CASE constant TOK_CASEDEF code

    TOK_CASE  shift, and go to state 97

    cases  go to state 98
    case   go to state 99


State 63

   49 expression: expressionArithmetique .  [TOK_CASE]
   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS   shift, and go to state 100
    TOK_MOINS  shift, and go to state 101
    TOK_MUL    shift, and go to state 102
    TOK_DIV    shift, and go to state 103
    TOK_PUISS  shift, and go to state 104

    $default  reduce using rule 49 (expression)


State 64

   57 expressionArithmetique: addition .

    $default  reduce using rule 57 (expressionArithmetique)


State 65

   58 expressionArithmetique: soustraction .

    $default  reduce using rule 58 (expressionArithmetique)


State 66

   59 expressionArithmetique: inversionSigne .

    $default  reduce using rule 59 (expressionArithmetique)


State 67

   60 expressionArithmetique: multiplication .

    $default  reduce using rule 60 (expressionArithmetique)


State 68

   61 expressionArithmetique: division .

    $default  reduce using rule 61 (expressionArithmetique)


State 69

   62 expressionArithmetique: puissance .

    $default  reduce using rule 62 (expressionArithmetique)


State 70

   50 expression: expressionBooleenne .  [TOK_CASE]
   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU  shift, and go to state 82
    TOK_ET  shift, and go to state 83
    TOK_EQ  shift, and go to state 84
    TOK_NQ  shift, and go to state 85
    TOK_LT  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 50 (expression)


State 71

   84 bouclePour: TOK_FOR identificateur . TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | TOK_FOR identificateur . TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_DANS  shift, and go to state 105


State 72

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   86 boucleTantQue: TOK_TANT expressionBooleenne . TOK_FAIRE code TOK_FINT
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU     shift, and go to state 82
    TOK_ET     shift, and go to state 83
    TOK_EQ     shift, and go to state 84
    TOK_NQ     shift, and go to state 85
    TOK_LT     shift, and go to state 86
    TOK_GT     shift, and go to state 87
    TOK_LE     shift, and go to state 88
    TOK_GE     shift, and go to state 89
    TOK_FAIRE  shift, and go to state 106


State 73

   22 lecture: TOK_LEER TOK_PARG . identificateur TOK_PARD TOK_FINSTR
   28 identificateur: . TOK_VAR

    TOK_VAR  shift, and go to state 10

    identificateur  go to state 107


State 74

   23 ecriture: TOK_ESCRIR TOK_PARG . variable TOK_PARD TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_BRACKG  shift, and go to state 12

    variable              go to state 108
    identificateur        go to state 109
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35


State 75

   16 declaration: type identificateur . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 110


State 76

   24 operationBinaire: variable TOK_DECAL . constantEntier TOK_FINSTR
   25                 | variable TOK_DECAL . identificateur TOK_FINSTR
   28 identificateur: . TOK_VAR
   35 constantEntier: . TOK_NOMBRE

    TOK_NOMBRE  shift, and go to state 6
    TOK_VAR     shift, and go to state 10

    identificateur  go to state 111
    constantEntier  go to state 112


State 77

   17 affectation: identificateur TOK_AFFECT . expressionArithmetique TOK_FINSTR
   18            | identificateur TOK_AFFECT . expressionBooleenne TOK_FINSTR
   19            | identificateur TOK_AFFECT . constantChaine TOK_FINSTR
   20            | identificateur TOK_AFFECT . constantCaractere TOK_FINSTR
   21            | identificateur TOK_AFFECT . constantTableau TOK_FINSTR
   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 56
    TOK_NON     shift, and go to state 50
    TOK_PARG    shift, and go to state 93
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_CSTB    shift, and go to state 52
    TOK_VARB    shift, and go to state 53
    TOK_BRACKG  shift, and go to state 12

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    constantChaine          go to state 113
    constantCaractere       go to state 114
    constantTableau         go to state 115
    expressionArithmetique  go to state 116
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69
    expressionBooleenne     go to state 117
    comparaison             go to state 55


State 78

   39 constantTableau: TOK_BRACKG elements TOK_BRACKD .

    $default  reduce using rule 39 (constantTableau)


State 79

   28 identificateur: . TOK_VAR
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   41 elements: elements TOK_VIRG . element
   43 element: . identificateur
   44        | . constantEntier
   45        | . constantReelle
   46        | . constantChaine
   47        | . constantCaractere
   48        | . constantTableau

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_BRACKG  shift, and go to state 12

    identificateur     go to state 42
    constantEntier     go to state 43
    constantReelle     go to state 44
    constantChaine     go to state 45
    constantCaractere  go to state 46
    constantTableau    go to state 47
    element            go to state 118


State 80

   72 expressionBooleenne: TOK_NON expressionBooleenne .  [TOK_OU, TOK_ET, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   73                    | expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_EQ  shift, and go to state 84
    TOK_NQ  shift, and go to state 85
    TOK_LT  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 72 (expressionBooleenne)

    Conflict between rule 72 and token TOK_OU resolved as reduce (TOK_OU < TOK_NON).
    Conflict between rule 72 and token TOK_ET resolved as reduce (TOK_ET < TOK_NON).
    Conflict between rule 72 and token TOK_EQ resolved as shift (TOK_NON < TOK_EQ).
    Conflict between rule 72 and token TOK_NQ resolved as shift (TOK_NON < TOK_NQ).
    Conflict between rule 72 and token TOK_LT resolved as shift (TOK_NON < TOK_LT).
    Conflict between rule 72 and token TOK_GT resolved as shift (TOK_NON < TOK_GT).
    Conflict between rule 72 and token TOK_LE resolved as shift (TOK_NON < TOK_LE).
    Conflict between rule 72 and token TOK_GE resolved as shift (TOK_NON < TOK_GE).


State 81

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   75                    | TOK_PARG expressionBooleenne . TOK_PARD
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU    shift, and go to state 82
    TOK_ET    shift, and go to state 83
    TOK_EQ    shift, and go to state 84
    TOK_NQ    shift, and go to state 85
    TOK_LT    shift, and go to state 86
    TOK_GT    shift, and go to state 87
    TOK_LE    shift, and go to state 88
    TOK_GE    shift, and go to state 89
    TOK_PARD  shift, and go to state 119


State 82

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   74                    | expressionBooleenne TOK_OU . expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 120
    comparaison          go to state 55


State 83

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   73                    | expressionBooleenne TOK_ET . expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 121
    comparaison          go to state 55


State 84

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   87            | expressionBooleenne TOK_EQ . expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 122
    comparaison          go to state 55


State 85

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   88            | expressionBooleenne TOK_NQ . expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 123
    comparaison          go to state 55


State 86

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   89            | expressionBooleenne TOK_LT . expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 124
    comparaison          go to state 55


State 87

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   90            | expressionBooleenne TOK_GT . expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 125
    comparaison          go to state 55


State 88

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   91            | expressionBooleenne TOK_LE . expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 126
    comparaison          go to state 55


State 89

   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne
   92            | expressionBooleenne TOK_GE . expressionBooleenne

    TOK_NON   shift, and go to state 50
    TOK_PARG  shift, and go to state 51
    TOK_CSTB  shift, and go to state 52
    TOK_VARB  shift, and go to state 53

    expressionBooleenne  go to state 127
    comparaison          go to state 55


State 90

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   77 boucleSi: TOK_SI expressionBooleenne TOK_ALORS . code TOK_FINSI
   78 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS . code TOK_SINON code TOK_FINSI

    $default  reduce using rule 2 (code)

    code  go to state 128


State 91

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   63                       | TOK_PARG . expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 96
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 92

   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   66 inversionSigne: TOK_MOINS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PUISS, TOK_PARD, TOK_FINSTR, TOK_CASE]
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    $default  reduce using rule 66 (inversionSigne)

    Conflict between rule 66 and token TOK_PLUS resolved as reduce (TOK_PLUS < NEG).
    Conflict between rule 66 and token TOK_MOINS resolved as reduce (TOK_MOINS < NEG).
    Conflict between rule 66 and token TOK_MUL resolved as reduce (TOK_MUL < NEG).
    Conflict between rule 66 and token TOK_DIV resolved as reduce (TOK_DIV < NEG).
    Conflict between rule 66 and token TOK_PUISS resolved as reduce (TOK_PUISS < NEG).


State 93

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   63                       | TOK_PARG . expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   70 expressionBooleenne: . TOK_CSTB
   71                    | . TOK_VARB
   72                    | . TOK_NON expressionBooleenne
   73                    | . expressionBooleenne TOK_ET expressionBooleenne
   74                    | . expressionBooleenne TOK_OU expressionBooleenne
   75                    | . TOK_PARG expressionBooleenne TOK_PARD
   75                    | TOK_PARG . expressionBooleenne TOK_PARD
   76                    | . comparaison
   87 comparaison: . expressionBooleenne TOK_EQ expressionBooleenne
   88            | . expressionBooleenne TOK_NQ expressionBooleenne
   89            | . expressionBooleenne TOK_LT expressionBooleenne
   90            | . expressionBooleenne TOK_GT expressionBooleenne
   91            | . expressionBooleenne TOK_LE expressionBooleenne
   92            | . expressionBooleenne TOK_GE expressionBooleenne

    TOK_MOINS   shift, and go to state 56
    TOK_NON     shift, and go to state 50
    TOK_PARG    shift, and go to state 93
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10
    TOK_CSTB    shift, and go to state 52
    TOK_VARB    shift, and go to state 53

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 96
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69
    expressionBooleenne     go to state 81
    comparaison             go to state 55


State 94

   52 expression: TOK_PARG constantChaine . TOK_PARD

    TOK_PARD  shift, and go to state 129


State 95

   54 expression: TOK_PARG constantTableau . TOK_PARD

    TOK_PARD  shift, and go to state 130


State 96

   63 expressionArithmetique: TOK_PARG expressionArithmetique . TOK_PARD
   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS   shift, and go to state 100
    TOK_MOINS  shift, and go to state 101
    TOK_MUL    shift, and go to state 102
    TOK_DIV    shift, and go to state 103
    TOK_PUISS  shift, and go to state 104
    TOK_PARD   shift, and go to state 131


State 97

   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   82 case: TOK_CASE . constant TOK_CASEDEF code

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_BRACKG  shift, and go to state 12

    constant              go to state 132
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35


State 98

   79 boucleSwitch: TOK_SWITCH expression cases . defaultcase TOK_FINSWITCH
   83 defaultcase: . TOK_DEFAULT TOK_CASEDEF code

    TOK_DEFAULT  shift, and go to state 133

    defaultcase  go to state 134


State 99

   80 cases: . case
   80      | case .  [TOK_DEFAULT]
   81      | . case cases
   81      | case . cases
   82 case: . TOK_CASE constant TOK_CASEDEF code

    TOK_CASE  shift, and go to state 97

    $default  reduce using rule 80 (cases)

    cases  go to state 135
    case   go to state 99


State 100

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   64         | expressionArithmetique TOK_PLUS . expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 136
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 101

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   65             | expressionArithmetique TOK_MOINS . expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 137
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 102

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   67               | expressionArithmetique TOK_MUL . expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 138
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 103

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   68         | expressionArithmetique TOK_DIV . expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 139
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 104

   28 identificateur: . TOK_VAR
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   55 expressionArithmetique: . identificateur
   56                       | . constantArithmetique
   57                       | . addition
   58                       | . soustraction
   59                       | . inversionSigne
   60                       | . multiplication
   61                       | . division
   62                       | . puissance
   63                       | . TOK_PARG expressionArithmetique TOK_PARD
   64 addition: . expressionArithmetique TOK_PLUS expressionArithmetique
   65 soustraction: . expressionArithmetique TOK_MOINS expressionArithmetique
   66 inversionSigne: . TOK_MOINS expressionArithmetique
   67 multiplication: . expressionArithmetique TOK_MUL expressionArithmetique
   68 division: . expressionArithmetique TOK_DIV expressionArithmetique
   69 puissance: . expressionArithmetique TOK_PUISS expressionArithmetique
   69          | expressionArithmetique TOK_PUISS . expressionArithmetique

    TOK_MOINS   shift, and go to state 56
    TOK_PARG    shift, and go to state 91
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_VAR     shift, and go to state 10

    identificateur          go to state 58
    constantArithmetique    go to state 59
    constantEntier          go to state 31
    constantReelle          go to state 32
    expressionArithmetique  go to state 140
    addition                go to state 64
    soustraction            go to state 65
    inversionSigne          go to state 66
    multiplication          go to state 67
    division                go to state 68
    puissance               go to state 69


State 105

   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   84 bouclePour: TOK_FOR identificateur TOK_DANS . variable TOK_FAIRE code TOK_FINFOR
   85           | TOK_FOR identificateur TOK_DANS . TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_OUVR    shift, and go to state 141
    TOK_BRACKG  shift, and go to state 12

    variable              go to state 142
    identificateur        go to state 109
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35


State 106

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   86 boucleTantQue: TOK_TANT expressionBooleenne TOK_FAIRE . code TOK_FINT

    $default  reduce using rule 2 (code)

    code  go to state 143


State 107

   22 lecture: TOK_LEER TOK_PARG identificateur . TOK_PARD TOK_FINSTR

    TOK_PARD  shift, and go to state 144


State 108

   23 ecriture: TOK_ESCRIR TOK_PARG variable . TOK_PARD TOK_FINSTR

    TOK_PARD  shift, and go to state 145


State 109

   26 variable: identificateur .

    $default  reduce using rule 26 (variable)


State 110

   16 declaration: type identificateur TOK_FINSTR .

    $default  reduce using rule 16 (declaration)


State 111

   25 operationBinaire: variable TOK_DECAL identificateur . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 146


State 112

   24 operationBinaire: variable TOK_DECAL constantEntier . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 147


State 113

   19 affectation: identificateur TOK_AFFECT constantChaine . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 148


State 114

   20 affectation: identificateur TOK_AFFECT constantCaractere . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 149


State 115

   21 affectation: identificateur TOK_AFFECT constantTableau . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 150


State 116

   17 affectation: identificateur TOK_AFFECT expressionArithmetique . TOK_FINSTR
   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PLUS    shift, and go to state 100
    TOK_MOINS   shift, and go to state 101
    TOK_MUL     shift, and go to state 102
    TOK_DIV     shift, and go to state 103
    TOK_PUISS   shift, and go to state 104
    TOK_FINSTR  shift, and go to state 151


State 117

   18 affectation: identificateur TOK_AFFECT expressionBooleenne . TOK_FINSTR
   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_OU      shift, and go to state 82
    TOK_ET      shift, and go to state 83
    TOK_EQ      shift, and go to state 84
    TOK_NQ      shift, and go to state 85
    TOK_LT      shift, and go to state 86
    TOK_GT      shift, and go to state 87
    TOK_LE      shift, and go to state 88
    TOK_GE      shift, and go to state 89
    TOK_FINSTR  shift, and go to state 152


State 118

   41 elements: elements TOK_VIRG element .

    $default  reduce using rule 41 (elements)


State 119

   75 expressionBooleenne: TOK_PARG expressionBooleenne TOK_PARD .

    $default  reduce using rule 75 (expressionBooleenne)


State 120

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   74                    | expressionBooleenne TOK_OU expressionBooleenne .  [TOK_OU, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_ET  shift, and go to state 83
    TOK_EQ  shift, and go to state 84
    TOK_NQ  shift, and go to state 85
    TOK_LT  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 74 (expressionBooleenne)

    Conflict between rule 74 and token TOK_OU resolved as reduce (%left TOK_OU).
    Conflict between rule 74 and token TOK_ET resolved as shift (TOK_OU < TOK_ET).
    Conflict between rule 74 and token TOK_EQ resolved as shift (TOK_OU < TOK_EQ).
    Conflict between rule 74 and token TOK_NQ resolved as shift (TOK_OU < TOK_NQ).
    Conflict between rule 74 and token TOK_LT resolved as shift (TOK_OU < TOK_LT).
    Conflict between rule 74 and token TOK_GT resolved as shift (TOK_OU < TOK_GT).
    Conflict between rule 74 and token TOK_LE resolved as shift (TOK_OU < TOK_LE).
    Conflict between rule 74 and token TOK_GE resolved as shift (TOK_OU < TOK_GE).


State 121

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   73                    | expressionBooleenne TOK_ET expressionBooleenne .  [TOK_OU, TOK_ET, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_EQ  shift, and go to state 84
    TOK_NQ  shift, and go to state 85
    TOK_LT  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 73 (expressionBooleenne)

    Conflict between rule 73 and token TOK_OU resolved as reduce (TOK_OU < TOK_ET).
    Conflict between rule 73 and token TOK_ET resolved as reduce (%left TOK_ET).
    Conflict between rule 73 and token TOK_EQ resolved as shift (TOK_ET < TOK_EQ).
    Conflict between rule 73 and token TOK_NQ resolved as shift (TOK_ET < TOK_NQ).
    Conflict between rule 73 and token TOK_LT resolved as shift (TOK_ET < TOK_LT).
    Conflict between rule 73 and token TOK_GT resolved as shift (TOK_ET < TOK_GT).
    Conflict between rule 73 and token TOK_LE resolved as shift (TOK_ET < TOK_LE).
    Conflict between rule 73 and token TOK_GE resolved as shift (TOK_ET < TOK_GE).


State 122

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   87            | expressionBooleenne TOK_EQ expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_NQ  shift, and go to state 85
    TOK_LT  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 87 (comparaison)

    Conflict between rule 87 and token TOK_OU resolved as reduce (TOK_OU < TOK_EQ).
    Conflict between rule 87 and token TOK_ET resolved as reduce (TOK_ET < TOK_EQ).
    Conflict between rule 87 and token TOK_EQ resolved as reduce (%left TOK_EQ).
    Conflict between rule 87 and token TOK_NQ resolved as shift (TOK_EQ < TOK_NQ).
    Conflict between rule 87 and token TOK_LT resolved as shift (TOK_EQ < TOK_LT).
    Conflict between rule 87 and token TOK_GT resolved as shift (TOK_EQ < TOK_GT).
    Conflict between rule 87 and token TOK_LE resolved as shift (TOK_EQ < TOK_LE).
    Conflict between rule 87 and token TOK_GE resolved as shift (TOK_EQ < TOK_GE).


State 123

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   88            | expressionBooleenne TOK_NQ expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_LT  shift, and go to state 86
    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 88 (comparaison)

    Conflict between rule 88 and token TOK_OU resolved as reduce (TOK_OU < TOK_NQ).
    Conflict between rule 88 and token TOK_ET resolved as reduce (TOK_ET < TOK_NQ).
    Conflict between rule 88 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_NQ).
    Conflict between rule 88 and token TOK_NQ resolved as reduce (%left TOK_NQ).
    Conflict between rule 88 and token TOK_LT resolved as shift (TOK_NQ < TOK_LT).
    Conflict between rule 88 and token TOK_GT resolved as shift (TOK_NQ < TOK_GT).
    Conflict between rule 88 and token TOK_LE resolved as shift (TOK_NQ < TOK_LE).
    Conflict between rule 88 and token TOK_GE resolved as shift (TOK_NQ < TOK_GE).


State 124

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   89            | expressionBooleenne TOK_LT expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_GT  shift, and go to state 87
    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 89 (comparaison)

    Conflict between rule 89 and token TOK_OU resolved as reduce (TOK_OU < TOK_LT).
    Conflict between rule 89 and token TOK_ET resolved as reduce (TOK_ET < TOK_LT).
    Conflict between rule 89 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_LT).
    Conflict between rule 89 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_LT).
    Conflict between rule 89 and token TOK_LT resolved as reduce (%left TOK_LT).
    Conflict between rule 89 and token TOK_GT resolved as shift (TOK_LT < TOK_GT).
    Conflict between rule 89 and token TOK_LE resolved as shift (TOK_LT < TOK_LE).
    Conflict between rule 89 and token TOK_GE resolved as shift (TOK_LT < TOK_GE).


State 125

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   90            | expressionBooleenne TOK_GT expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_GT, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_LE  shift, and go to state 88
    TOK_GE  shift, and go to state 89

    $default  reduce using rule 90 (comparaison)

    Conflict between rule 90 and token TOK_OU resolved as reduce (TOK_OU < TOK_GT).
    Conflict between rule 90 and token TOK_ET resolved as reduce (TOK_ET < TOK_GT).
    Conflict between rule 90 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_GT).
    Conflict between rule 90 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_GT).
    Conflict between rule 90 and token TOK_LT resolved as reduce (TOK_LT < TOK_GT).
    Conflict between rule 90 and token TOK_GT resolved as reduce (%left TOK_GT).
    Conflict between rule 90 and token TOK_LE resolved as shift (TOK_GT < TOK_LE).
    Conflict between rule 90 and token TOK_GE resolved as shift (TOK_GT < TOK_GE).


State 126

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   91            | expressionBooleenne TOK_LE expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_GT, TOK_LE, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]
   92            | expressionBooleenne . TOK_GE expressionBooleenne

    TOK_GE  shift, and go to state 89

    $default  reduce using rule 91 (comparaison)

    Conflict between rule 91 and token TOK_OU resolved as reduce (TOK_OU < TOK_LE).
    Conflict between rule 91 and token TOK_ET resolved as reduce (TOK_ET < TOK_LE).
    Conflict between rule 91 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_LE).
    Conflict between rule 91 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_LE).
    Conflict between rule 91 and token TOK_LT resolved as reduce (TOK_LT < TOK_LE).
    Conflict between rule 91 and token TOK_GT resolved as reduce (TOK_GT < TOK_LE).
    Conflict between rule 91 and token TOK_LE resolved as reduce (%left TOK_LE).
    Conflict between rule 91 and token TOK_GE resolved as shift (TOK_LE < TOK_GE).


State 127

   73 expressionBooleenne: expressionBooleenne . TOK_ET expressionBooleenne
   74                    | expressionBooleenne . TOK_OU expressionBooleenne
   87 comparaison: expressionBooleenne . TOK_EQ expressionBooleenne
   88            | expressionBooleenne . TOK_NQ expressionBooleenne
   89            | expressionBooleenne . TOK_LT expressionBooleenne
   90            | expressionBooleenne . TOK_GT expressionBooleenne
   91            | expressionBooleenne . TOK_LE expressionBooleenne
   92            | expressionBooleenne . TOK_GE expressionBooleenne
   92            | expressionBooleenne TOK_GE expressionBooleenne .  [TOK_OU, TOK_ET, TOK_EQ, TOK_NQ, TOK_LT, TOK_GT, TOK_LE, TOK_GE, TOK_PARD, TOK_FINSTR, TOK_ALORS, TOK_CASE, TOK_FAIRE]

    $default  reduce using rule 92 (comparaison)

    Conflict between rule 92 and token TOK_OU resolved as reduce (TOK_OU < TOK_GE).
    Conflict between rule 92 and token TOK_ET resolved as reduce (TOK_ET < TOK_GE).
    Conflict between rule 92 and token TOK_EQ resolved as reduce (TOK_EQ < TOK_GE).
    Conflict between rule 92 and token TOK_NQ resolved as reduce (TOK_NQ < TOK_GE).
    Conflict between rule 92 and token TOK_LT resolved as reduce (TOK_LT < TOK_GE).
    Conflict between rule 92 and token TOK_GT resolved as reduce (TOK_GT < TOK_GE).
    Conflict between rule 92 and token TOK_LE resolved as reduce (TOK_LE < TOK_GE).
    Conflict between rule 92 and token TOK_GE resolved as reduce (%left TOK_GE).


State 128

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   77         | TOK_SI expressionBooleenne TOK_ALORS code . TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   78              | TOK_SI expressionBooleenne TOK_ALORS code . TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_SINON   shift, and go to state 153
    TOK_FINSI   shift, and go to state 154
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 129

   52 expression: TOK_PARG constantChaine TOK_PARD .

    $default  reduce using rule 52 (expression)


State 130

   54 expression: TOK_PARG constantTableau TOK_PARD .

    $default  reduce using rule 54 (expression)


State 131

   63 expressionArithmetique: TOK_PARG expressionArithmetique TOK_PARD .

    $default  reduce using rule 63 (expressionArithmetique)


State 132

   82 case: TOK_CASE constant . TOK_CASEDEF code

    TOK_CASEDEF  shift, and go to state 155


State 133

   83 defaultcase: TOK_DEFAULT . TOK_CASEDEF code

    TOK_CASEDEF  shift, and go to state 156


State 134

   79 boucleSwitch: TOK_SWITCH expression cases defaultcase . TOK_FINSWITCH

    TOK_FINSWITCH  shift, and go to state 157


State 135

   81 cases: case cases .

    $default  reduce using rule 81 (cases)


State 136

   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   64         | expressionArithmetique TOK_PLUS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_PARD, TOK_FINSTR, TOK_CASE]
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_MUL    shift, and go to state 102
    TOK_DIV    shift, and go to state 103
    TOK_PUISS  shift, and go to state 104

    $default  reduce using rule 64 (addition)

    Conflict between rule 64 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 64 and token TOK_MOINS resolved as reduce (%left TOK_MOINS).
    Conflict between rule 64 and token TOK_MUL resolved as shift (TOK_PLUS < TOK_MUL).
    Conflict between rule 64 and token TOK_DIV resolved as shift (TOK_PLUS < TOK_DIV).
    Conflict between rule 64 and token TOK_PUISS resolved as shift (TOK_PLUS < TOK_PUISS).


State 137

   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   65             | expressionArithmetique TOK_MOINS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_PARD, TOK_FINSTR, TOK_CASE]
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_MUL    shift, and go to state 102
    TOK_DIV    shift, and go to state 103
    TOK_PUISS  shift, and go to state 104

    $default  reduce using rule 65 (soustraction)

    Conflict between rule 65 and token TOK_PLUS resolved as reduce (%left TOK_PLUS).
    Conflict between rule 65 and token TOK_MOINS resolved as reduce (%left TOK_MOINS).
    Conflict between rule 65 and token TOK_MUL resolved as shift (TOK_MOINS < TOK_MUL).
    Conflict between rule 65 and token TOK_DIV resolved as shift (TOK_MOINS < TOK_DIV).
    Conflict between rule 65 and token TOK_PUISS resolved as shift (TOK_MOINS < TOK_PUISS).


State 138

   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   67               | expressionArithmetique TOK_MUL expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PARD, TOK_FINSTR, TOK_CASE]
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PUISS  shift, and go to state 104

    $default  reduce using rule 67 (multiplication)

    Conflict between rule 67 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_MUL).
    Conflict between rule 67 and token TOK_MOINS resolved as reduce (TOK_MOINS < TOK_MUL).
    Conflict between rule 67 and token TOK_MUL resolved as reduce (%left TOK_MUL).
    Conflict between rule 67 and token TOK_DIV resolved as reduce (%left TOK_DIV).
    Conflict between rule 67 and token TOK_PUISS resolved as shift (TOK_MUL < TOK_PUISS).


State 139

   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   68         | expressionArithmetique TOK_DIV expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PARD, TOK_FINSTR, TOK_CASE]
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique

    TOK_PUISS  shift, and go to state 104

    $default  reduce using rule 68 (division)

    Conflict between rule 68 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_DIV).
    Conflict between rule 68 and token TOK_MOINS resolved as reduce (TOK_MOINS < TOK_DIV).
    Conflict between rule 68 and token TOK_MUL resolved as reduce (%left TOK_MUL).
    Conflict between rule 68 and token TOK_DIV resolved as reduce (%left TOK_DIV).
    Conflict between rule 68 and token TOK_PUISS resolved as shift (TOK_DIV < TOK_PUISS).


State 140

   64 addition: expressionArithmetique . TOK_PLUS expressionArithmetique
   65 soustraction: expressionArithmetique . TOK_MOINS expressionArithmetique
   67 multiplication: expressionArithmetique . TOK_MUL expressionArithmetique
   68 division: expressionArithmetique . TOK_DIV expressionArithmetique
   69 puissance: expressionArithmetique . TOK_PUISS expressionArithmetique
   69          | expressionArithmetique TOK_PUISS expressionArithmetique .  [TOK_PLUS, TOK_MOINS, TOK_MUL, TOK_DIV, TOK_PARD, TOK_FINSTR, TOK_CASE]

    TOK_PUISS  shift, and go to state 104

    $default  reduce using rule 69 (puissance)

    Conflict between rule 69 and token TOK_PLUS resolved as reduce (TOK_PLUS < TOK_PUISS).
    Conflict between rule 69 and token TOK_MOINS resolved as reduce (TOK_MOINS < TOK_PUISS).
    Conflict between rule 69 and token TOK_MUL resolved as reduce (TOK_MUL < TOK_PUISS).
    Conflict between rule 69 and token TOK_DIV resolved as reduce (TOK_DIV < TOK_PUISS).
    Conflict between rule 69 and token TOK_PUISS resolved as shift (%right TOK_PUISS).


State 141

   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR . variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_BRACKG  shift, and go to state 12

    variable              go to state 158
    identificateur        go to state 109
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35


State 142

   84 bouclePour: TOK_FOR identificateur TOK_DANS variable . TOK_FAIRE code TOK_FINFOR

    TOK_FAIRE  shift, and go to state 159


State 143

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT
   86              | TOK_TANT expressionBooleenne TOK_FAIRE code . TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_TANT    shift, and go to state 17
    TOK_FINT    shift, and go to state 160
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 144

   22 lecture: TOK_LEER TOK_PARG identificateur TOK_PARD . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 161


State 145

   23 ecriture: TOK_ESCRIR TOK_PARG variable TOK_PARD . TOK_FINSTR

    TOK_FINSTR  shift, and go to state 162


State 146

   25 operationBinaire: variable TOK_DECAL identificateur TOK_FINSTR .

    $default  reduce using rule 25 (operationBinaire)


State 147

   24 operationBinaire: variable TOK_DECAL constantEntier TOK_FINSTR .

    $default  reduce using rule 24 (operationBinaire)


State 148

   19 affectation: identificateur TOK_AFFECT constantChaine TOK_FINSTR .

    $default  reduce using rule 19 (affectation)


State 149

   20 affectation: identificateur TOK_AFFECT constantCaractere TOK_FINSTR .

    $default  reduce using rule 20 (affectation)


State 150

   21 affectation: identificateur TOK_AFFECT constantTableau TOK_FINSTR .

    $default  reduce using rule 21 (affectation)


State 151

   17 affectation: identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR .

    $default  reduce using rule 17 (affectation)


State 152

   18 affectation: identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR .

    $default  reduce using rule 18 (affectation)


State 153

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   78 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON . code TOK_FINSI

    $default  reduce using rule 2 (code)

    code  go to state 163


State 154

   77 boucleSi: TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI .

    $default  reduce using rule 77 (boucleSi)


State 155

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   82 case: TOK_CASE constant TOK_CASEDEF . code

    $default  reduce using rule 2 (code)

    code  go to state 164


State 156

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   83 defaultcase: TOK_DEFAULT TOK_CASEDEF . code

    $default  reduce using rule 2 (code)

    code  go to state 165


State 157

   79 boucleSwitch: TOK_SWITCH expression cases defaultcase TOK_FINSWITCH .

    $default  reduce using rule 79 (boucleSwitch)


State 158

   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable . TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_DPTS  shift, and go to state 166


State 159

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   84 bouclePour: TOK_FOR identificateur TOK_DANS variable TOK_FAIRE . code TOK_FINFOR

    $default  reduce using rule 2 (code)

    code  go to state 167


State 160

   86 boucleTantQue: TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT .

    $default  reduce using rule 86 (boucleTantQue)


State 161

   22 lecture: TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR .

    $default  reduce using rule 22 (lecture)


State 162

   23 ecriture: TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR .

    $default  reduce using rule 23 (ecriture)


State 163

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   78              | TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code . TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_FINSI   shift, and go to state 168
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 164

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   82 case: TOK_CASE constant TOK_CASEDEF code .  [TOK_CASE, TOK_DEFAULT]
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    TOK_CASE     reduce using rule 82 (case)
    TOK_DEFAULT  reduce using rule 82 (case)

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 165

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   83 defaultcase: TOK_DEFAULT TOK_CASEDEF code .  [TOK_FINSWITCH]
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    TOK_FINSWITCH  reduce using rule 83 (defaultcase)

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 166

   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS . variable TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_BRACKG  shift, and go to state 12

    variable              go to state 169
    identificateur        go to state 109
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35


State 167

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   84           | TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code . TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_FINFOR  shift, and go to state 170
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 168

   78 boucleSiSinon: TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI .

    $default  reduce using rule 78 (boucleSiSinon)


State 169

   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable . TOK_FERM TOK_FAIRE code TOK_FINFOR

    TOK_FERM  shift, and go to state 171


State 170

   84 bouclePour: TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR .

    $default  reduce using rule 84 (bouclePour)


State 171

   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM . TOK_FAIRE code TOK_FINFOR

    TOK_FAIRE  shift, and go to state 172


State 172

    2 code: . %empty
    3     | . code instruction
    4     | . code error
   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE . code TOK_FINFOR

    $default  reduce using rule 2 (code)

    code  go to state 173


State 173

    3 code: code . instruction
    4     | code . error
    5 instruction: . declaration
    6            | . affectation
    7            | . lecture
    8            | . ecriture
    9            | . operationBinaire
   10            | . boucleSi
   11            | . boucleSiSinon
   12            | . boucleSwitch
   13            | . bouclePour
   14            | . boucleTantQue
   15 type: . TOK_TYPE
   16 declaration: . type identificateur TOK_FINSTR
   17 affectation: . identificateur TOK_AFFECT expressionArithmetique TOK_FINSTR
   18            | . identificateur TOK_AFFECT expressionBooleenne TOK_FINSTR
   19            | . identificateur TOK_AFFECT constantChaine TOK_FINSTR
   20            | . identificateur TOK_AFFECT constantCaractere TOK_FINSTR
   21            | . identificateur TOK_AFFECT constantTableau TOK_FINSTR
   22 lecture: . TOK_LEER TOK_PARG identificateur TOK_PARD TOK_FINSTR
   23 ecriture: . TOK_ESCRIR TOK_PARG variable TOK_PARD TOK_FINSTR
   24 operationBinaire: . variable TOK_DECAL constantEntier TOK_FINSTR
   25                 | . variable TOK_DECAL identificateur TOK_FINSTR
   26 variable: . identificateur
   27         | . constant
   28 identificateur: . TOK_VAR
   29 constant: . constantArithmetique
   30         | . constantChaine
   31         | . constantCaractere
   32         | . constantTableau
   33 constantArithmetique: . constantEntier
   34                     | . constantReelle
   35 constantEntier: . TOK_NOMBRE
   36 constantReelle: . TOK_FLOAT
   37 constantChaine: . TOK_STR
   38 constantCaractere: . TOK_CHAR
   39 constantTableau: . TOK_BRACKG elements TOK_BRACKD
   40                | . TOK_BRACKG TOK_BRACKD
   77 boucleSi: . TOK_SI expressionBooleenne TOK_ALORS code TOK_FINSI
   78 boucleSiSinon: . TOK_SI expressionBooleenne TOK_ALORS code TOK_SINON code TOK_FINSI
   79 boucleSwitch: . TOK_SWITCH expression cases defaultcase TOK_FINSWITCH
   84 bouclePour: . TOK_FOR identificateur TOK_DANS variable TOK_FAIRE code TOK_FINFOR
   85           | . TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR
   85           | TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code . TOK_FINFOR
   86 boucleTantQue: . TOK_TANT expressionBooleenne TOK_FAIRE code TOK_FINT

    error       shift, and go to state 5
    TOK_NOMBRE  shift, and go to state 6
    TOK_FLOAT   shift, and go to state 7
    TOK_STR     shift, and go to state 8
    TOK_CHAR    shift, and go to state 9
    TOK_VAR     shift, and go to state 10
    TOK_TYPE    shift, and go to state 11
    TOK_BRACKG  shift, and go to state 12
    TOK_SI      shift, and go to state 14
    TOK_SWITCH  shift, and go to state 15
    TOK_FOR     shift, and go to state 16
    TOK_FINFOR  shift, and go to state 174
    TOK_TANT    shift, and go to state 17
    TOK_LEER    shift, and go to state 18
    TOK_ESCRIR  shift, and go to state 19

    instruction           go to state 20
    type                  go to state 21
    declaration           go to state 22
    affectation           go to state 23
    lecture               go to state 24
    ecriture              go to state 25
    operationBinaire      go to state 26
    variable              go to state 27
    identificateur        go to state 28
    constant              go to state 29
    constantArithmetique  go to state 30
    constantEntier        go to state 31
    constantReelle        go to state 32
    constantChaine        go to state 33
    constantCaractere     go to state 34
    constantTableau       go to state 35
    boucleSi              go to state 36
    boucleSiSinon         go to state 37
    boucleSwitch          go to state 38
    bouclePour            go to state 39
    boucleTantQue         go to state 40


State 174

   85 bouclePour: TOK_FOR identificateur TOK_DANS TOK_OUVR variable TOK_DPTS variable TOK_FERM TOK_FAIRE code TOK_FINFOR .

    $default  reduce using rule 85 (bouclePour)
